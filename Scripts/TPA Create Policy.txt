PROMPT CREATE OR REPLACE FUNCTION av_nxtcreatepolicy_fnc
CREATE OR REPLACE FUNCTION AV_NXTCREATEPOLICY_FNC(P_PRIMKEY NUMBER,P_RESULT OUT NUMBER) RETURN VARCHAR2
AS
L_ERROR VARCHAR2(1000);
P_OWNERCODE VARCHAR2(1000);
P_POLICYID VARCHAR2(1000);
P_POLICYNAME VARCHAR2(1000);L_RULES VARCHAR2(1000);
L_STAFFCOUNT NUMBER;L_AGENTCODE NUMBER;
L_AGENTCOUNT NUMBER;L_INDIVIDUALPOLICYCODE NUMBER;
L_INDIVIDUALPOLICYCOUNT NUMBER;L_GROUPCODE NUMBER;
L_AGENTNAME  VARCHAR2(1000); L_POLICYCODE NUMBER;
L_DEFAULTVALUE NUMBER;L_POLICYCOUNT NUMBER;L_LICENSECOUNT NUMBER;
BEGIN
DELETE FROM IM_POLICY_INSURER_SUBDTL WHERE POLICYINSURERDTLCODE IN
(SELECT POLICYINSURERDTLCODE FROM IM_POLICY_INSURER_DTL WHERE INDIVIDUALPOLICYCODE IN
(SELECT INDIVIDUALPOLICYCODE FROM IM_INDIVIDUALPOLICY WHERE PORTALMEMBERID IN
(SELECT MEMBERID FROM IM_PORTAL_CREATEPOLICY_DTL WHERE LOGCODE = P_PRIMKEY AND Upper(POLICYTYPE) = 'G')));
COMMIT;
DELETE FROM IM_INDIVIDUALPOLICY WHERE PORTALMEMBERID IN
(SELECT MEMBERID FROM IM_PORTAL_CREATEPOLICY_DTL WHERE LOGCODE = P_PRIMKEY AND Upper(POLICYTYPE) = 'G');
COMMIT;
DELETE FROM IM_POLICY_INSURER_SUBDTL WHERE POLICYINSURERDTLCODE IN
(SELECT POLICYINSURERDTLCODE FROM IM_POLICY_INSURER_DTL WHERE POLICYCODE IN
(SELECT POLICYCODE FROM IM_POLICY WHERE PORTALMEMBERID IN
(SELECT MEMBERID FROM IM_PORTAL_CREATEPOLICY_DTL WHERE LOGCODE = P_PRIMKEY AND Upper(POLICYTYPE) = 'I')));
COMMIT;
DELETE FROM IM_INDIVIDUALPOLICY WHERE PORTALMEMBERID IN
(SELECT MEMBERID FROM IM_PORTAL_CREATEPOLICY_DTL WHERE LOGCODE = P_PRIMKEY AND Upper(POLICYTYPE) = 'I');
COMMIT;

DELETE FROM  INSUPLOADERRORLOG WHERE  REFERENCEKEY = P_PRIMKEY;
COMMIT;
FOR HDR IN (SELECT * FROM IM_PORTAL_CREATEPOLICY_DTL WHERE LOGCODE = P_PRIMKEY) LOOP
  
  IF SubStr(Upper(HDR.NEXTCAREPOLICYID),0,1) = 'N' THEN
   P_OWNERCODE := 7;
  ELSIF SubStr(Upper(HDR.NEXTCAREPOLICYID),0,1) = 'U' THEN
   P_OWNERCODE := 9;
  ELSIF SubStr(Upper(HDR.NEXTCAREPOLICYID),0,1) = 'F' THEN
   P_OWNERCODE := 11;
  END IF;
  SELECT Count(*) INTO L_STAFFCOUNT FROM IM_TPABRANCH_DTL WHERE Upper(USERID) = Upper(HDR.STAFF);

  IF L_STAFFCOUNT = 0 THEN
    INSERT INTO INSUPLOADERRORLOG (MENUID,REFERENCEKEY,ERRORCODE,ERRORNAME,DESCRIPTION) VALUES
    ('ID_TPACREATEPOLICY',P_PRIMKEY,'102','S.No :' || HDR.MEMBERID,'STAFF ID NOT FOUND IN THE SYSTEM'||Upper(HDR.STAFF));
    COMMIT;
    P_RESULT := 2;
  ELSE
    SELECT Count(*) INTO L_AGENTCOUNT FROM IM_AGENTS WHERE AGENT_ID IN
    (SELECT AGENTCODE FROM IM_TPABRANCH_DTL WHERE Upper(USERID) = Upper(HDR.STAFF));
    IF L_AGENTCOUNT = 0 THEN
      INSERT INTO INSUPLOADERRORLOG (MENUID,REFERENCEKEY,ERRORCODE,ERRORNAME,DESCRIPTION) VALUES
      ('ID_TPACREATEPOLICY',P_PRIMKEY,'102','S.No :' || HDR.MEMBERID,'AGENT ID NOT FOUND IN THE SYSTEM'||Upper(HDR.STAFF));
      COMMIT;
      P_RESULT := 2;  
    ELSE
      SELECT Max(AGENTCODE),Max(AGENT_NAME_EN) INTO L_AGENTCODE,L_AGENTNAME FROM IM_AGENTS WHERE AGENT_ID IN
      (SELECT AGENTCODE FROM IM_TPABRANCH_DTL WHERE Upper(USERID) = Upper(HDR.STAFF));
      SELECT Max(COMMISSIONRATE) INTO L_DEFAULTVALUE  FROM IM_TPABRANCH_DTL WHERE Upper(USERID) = Upper(HDR.STAFF);
    END IF;
  END IF;

  IF Upper(HDR.POLICYTYPE) = 'I' THEN
    P_POLICYNAME := HDR.FIRSTNAME||' '||HDR.MIDDLENAME||' '||HDR.LASTNAME||'-'||TO_CHAR(HDR.INCEPTIONDATE,'RRRR');   
    SELECT Count(*) INTO L_INDIVIDUALPOLICYCOUNT FROM IM_INDIVIDUALPOLICY WHERE POLICYID  = HDR.NEXTCAREPOLICYID;
    IF L_INDIVIDUALPOLICYCOUNT > 0 THEN
      SELECT Count(*) INTO L_INDIVIDUALPOLICYCOUNT FROM IM_INDIVIDUALPOLICY WHERE PORTALMEMBERID  = HDR.MEMBERID;
      IF L_INDIVIDUALPOLICYCOUNT > 0 THEN
        INSERT INTO INSUPLOADERRORLOG (MENUID,REFERENCEKEY,ERRORCODE,ERRORNAME,DESCRIPTION) VALUES
        ('ID_TPACREATEPOLICY',P_PRIMKEY,'102','S.No :' || HDR.MEMBERID,'POLICY ALREADY EXISTS FOR THE MEMBER'||HDR.MEMBERID);
        COMMIT;
        P_RESULT := 2;
        DELETE FROM IM_POLICY_INSURER_SUBDTL WHERE POLICYINSURERDTLCODE IN
        (SELECT POLICYINSURERDTLCODE FROM IM_POLICY_INSURER_DTL WHERE INDIVIDUALPOLICYCODE IN
        (SELECT INDIVIDUALPOLICYCODE FROM IM_INDIVIDUALPOLICY WHERE PORTALMEMBERID IN
        (SELECT MEMBERID FROM IM_PORTAL_CREATEPOLICY_DTL WHERE LOGCODE = P_PRIMKEY AND Upper(POLICYTYPE) = 'G')));
        COMMIT;
        DELETE FROM IM_INDIVIDUALPOLICY WHERE PORTALMEMBERID IN
        (SELECT MEMBERID FROM IM_PORTAL_CREATEPOLICY_DTL WHERE LOGCODE = P_PRIMKEY AND Upper(POLICYTYPE) = 'G');
        COMMIT;
        DELETE FROM IM_POLICY_INSURER_SUBDTL WHERE POLICYINSURERDTLCODE IN
        (SELECT POLICYINSURERDTLCODE FROM IM_POLICY_INSURER_DTL WHERE POLICYCODE IN
        (SELECT POLICYCODE FROM IM_POLICY WHERE PORTALMEMBERID IN
        (SELECT MEMBERID FROM IM_PORTAL_CREATEPOLICY_DTL WHERE LOGCODE = P_PRIMKEY AND Upper(POLICYTYPE) = 'I')));
        COMMIT;
        DELETE FROM IM_INDIVIDUALPOLICY WHERE PORTALMEMBERID IN
        (SELECT MEMBERID FROM IM_PORTAL_CREATEPOLICY_DTL WHERE LOGCODE = P_PRIMKEY AND Upper(POLICYTYPE) = 'I');
        COMMIT;
        RETURN 'POLICY ALREADY EXISTS FOR THE MEMBER'||HDR.MEMBERID;
      END IF;
    ELSE
      INSERT INTO ADDVANTAGE_LIVE.IM_INDIVIDUALPOLICY
      (INDIVIDUALPOLICYCODE,
      POLICYID, POLICYNAME, STARTDATE, ENDDATE, GROUPCODE,
      ISFRONTINGGROUP, CATEGORYCODE, PLANCODE, ACTIVE, CALCULATEFINE,
      FINETEMPLATECODE, FRONTINGSETTING, REMARKS, CREATEDIN, CREATEDON,
      CREATEDBY, LASTMODIFIEDON, LASTMODIFIEDBY, COMPANYCODE, LOCATIONCODE,
      DEACTIVATEDON, DEACTIVATEDBY, SERIALNO, ALTERNATENAME, ANUALLIMITSTYPECODE,
      INPATENTSLIMITSTYPECODE, OUTPATENTSLIMITSTYPECODE, ALTLIMITS, IPTLIMITS, OPTLIMITS,
      IPPREFIX, IPNO, IPSUFFIX, IPFULLNO, AUTHORIZEDSTATUS,
      MEMBERCODE, FINAL_PREMIUM, BASE_PERIMUM, PERIMUMCODE, ELEMENTTEMPLATECODE,
      ISMEMBERPOLICYCONVERTED, TEMPLATECODE, COMMISIONTYPE, AGENTCODE, BROKERCODE,
      OWNERCODE, HAADAPPROVALCODE, REINSURANCECODE, OLDPOLICYCODE, RENEWALPOLICYCODE,
      INDIPOLICYSOURCECODE, PAYMENTMODE, CONTRACTTYPE, INSURANCECO, EXCELVALIDATE,
      BILLINGTYPE, BRANCHCODE, POLICYSERIALNO, POSTINGDONE, NGI_FEES,
      INCEPTIONPREMIUM, ISCAPTIVE, ENTITYTYPE, ENTITYID, CONTACTNUMBER,
      EMAILID, PORTALMEMBERID)
      VALUES
      ((SELECT MAX(INDIVIDUALPOLICYCODE) + 1  FROM IM_INDIVIDUALPOLICY), HDR.NEXTCAREPOLICYID, P_POLICYNAME,
      HDR.INCEPTIONDATE,HDR.INCEPTIONDATE+364,
      NULL, 0, NULL, NULL, 1,
      0, NULL, NULL, NULL, NULL,
      SYSDATE, 100000000000000002,SYSDATE, 100000000000000002, 1,
      1, NULL, NULL, (SELECT MAX(SERIALNO) + 1 FROM IM_INDIVIDUALPOLICY), NULL,
      0, 0, 0, 0, 0,
      0, NULL,NULL, NULL, '',
      0, 100000000000339720, 0, 0, 0,
      NULL, 0, '65', 0, L_AGENTCODE,
      NULL, P_OWNERCODE, NULL, NULL, NULL,
      NULL, 4, 0, 0, NULL,
      0, 0, NULL, 1, 0,
      11, NULL, NULL, NULL, NULL,
      NULL, NULL, HDR.MEMBERID);
      COMMIT;
    END IF;

    IF P_RESULT = 2 THEN
      CONTINUE;
    END IF;


    SELECT INDIVIDUALPOLICYCODE INTO L_INDIVIDUALPOLICYCODE FROM IM_INDIVIDUALPOLICY WHERE POLICYID = HDR.NEXTCAREPOLICYID;

    IF SubStr(Upper(HDR.NEXTCAREPOLICYID),0,1) = 'N' THEN
      INSERT INTO ADDVANTAGE_LIVE.IM_NGIINDPOLICYCATEGORY
        (POLICYCATEGORYCODE, INDIVIDUALPOLICYCODE, CATEGORYCODE, ALTLIMIT, IPLIMIT, PLANCODE, CALCULATEFINE, ISFRONTINGGROUP, COMPANYCODE, CREATEDBY, LASTMODIFIEDBY, CREATEDON, LASTMODIFIEDON, LOCATIONCODE, SERIALNO, OPLIMIT, ACTIVE, MEMBERCODE, ROOMTYPE, EMGDETECTWINETWTYPE, EMGDETECTWINETWVALUE, EMGDETECTOONETWTYPE, EMGDETECTOONETWVALUE, TOTALPREMIUM, LIMITTYPE, DEDECTABLETYPE, DEDECTABLEVALUE, LIMITS, CO_IN_TYPE, CO_IN_VALUE, OONDEDECTABLETYPE, OONDEDECTABLEVALUE, OONCO_IN_TYPE, OONCO_IN_VALUE, ALERTCLAIMSTEAMREMARK, EMIRATECODE)
        VALUES
          ((SELECT MAX(POLICYCATEGORYCODE) + 1 FROM IM_NGIINDPOLICYCATEGORY), L_INDIVIDUALPOLICYCODE, 100000000000000001, 250000, 0,
            100000000000000474, 1, 0,
            1, 100000000000000657, 100000000000000657,SYSDATE, SYSDATE,
            1, (SELECT MAX(SERIALNO) + 1 FROM IM_NGIINDPOLICYCATEGORY), 0, 1,
            100000000000313952, 0, 2, 0,
            2, 0, 0, 0,
            0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 100000000000001994);
        COMMIT;
      L_RULES := INSERTTPATREATY(L_INDIVIDUALPOLICYCODE,3,100000000000000164);
      L_RULES := INSERTTPATREATY(L_INDIVIDUALPOLICYCODE,4,100000000000000164);
      Insert into ADDVANTAGE_LIVE.IM_IP_COMMISSION
      (IP_COMM_CODE, INDIVIDUALPOLICYCODE, COMISSION_TYPES, DEFAULTVALUE, CALC_METHOD, COMMISSION_VALUE, CREATEDIN, CREATEDON, CREATEDBY, LASTMODIFIEDON, LASTMODIFIEDBY, LEGALENTITYCODE, CUSTOMERCODE, LOCATIONCODE, SERIALNO, COMPANYCODE, COMMISSIONTO, INDPOLCYCOMMISIONTO)
      Values
      ((SELECT MAX(IP_COMM_CODE) + 1 FROM IM_IP_COMMISSION), L_INDIVIDUALPOLICYCODE, 1,L_DEFAULTVALUE, 1,
      L_DEFAULTVALUE, 1,SYSDATE, 100000000000000002,SYSDATE,
      100000000000000002, 100000000000000001, 100000000000000001,1,(SELECT MAX(SERIALNO) + 1 FROM IM_IP_COMMISSION),
      1, L_AGENTCODE,L_AGENTNAME);
      COMMIT;
      Insert into ADDVANTAGE_LIVE.IM_IP_COMMISSION
      (IP_COMM_CODE, INDIVIDUALPOLICYCODE, COMISSION_TYPES, DEFAULTVALUE, CALC_METHOD, COMMISSION_VALUE, CREATEDIN, CREATEDON, CREATEDBY, LASTMODIFIEDON, LASTMODIFIEDBY, LEGALENTITYCODE, CUSTOMERCODE, LOCATIONCODE, SERIALNO, COMPANYCODE, INDPOLCYCOMMISIONTO, GENERALCOMMBILLINGCODE)
      Values
      ((SELECT MAX(IP_COMM_CODE) + 1 FROM IM_IP_COMMISSION), L_INDIVIDUALPOLICYCODE, 2,5, 1,
      5, 1, SYSDATE, 100000000000000002,SYSDATE,
      100000000000000002, 100000000000000001, 100000000000000001, 1, (SELECT MAX(SERIALNO) + 1 FROM IM_IP_COMMISSION),
      1, 'NEXTCARE', 100000000000000027);
      COMMIT;
    ELSIF SubStr(Upper(HDR.NEXTCAREPOLICYID),0,1) = 'F' THEN
      INSERT INTO ADDVANTAGE_LIVE.IM_NGIINDPOLICYCATEGORY
        (POLICYCATEGORYCODE, INDIVIDUALPOLICYCODE, CATEGORYCODE, ALTLIMIT, IPLIMIT, PLANCODE, CALCULATEFINE, ISFRONTINGGROUP, COMPANYCODE, CREATEDBY, LASTMODIFIEDBY, CREATEDON, LASTMODIFIEDON, LOCATIONCODE, SERIALNO, OPLIMIT, ACTIVE, MEMBERCODE, ROOMTYPE, EMGDETECTWINETWTYPE, EMGDETECTWINETWVALUE, EMGDETECTOONETWTYPE, EMGDETECTOONETWVALUE, TOTALPREMIUM, LIMITTYPE, DEDECTABLETYPE, DEDECTABLEVALUE, LIMITS, CO_IN_TYPE, CO_IN_VALUE, OONDEDECTABLETYPE, OONDEDECTABLEVALUE, OONCO_IN_TYPE, OONCO_IN_VALUE, ALERTCLAIMSTEAMREMARK, EMIRATECODE)
        VALUES
          ((SELECT MAX(POLICYCATEGORYCODE) + 1 FROM IM_NGIINDPOLICYCATEGORY), L_INDIVIDUALPOLICYCODE, 100000000000000001, 250000, 0,
            100000000000000475, 1, 0,
            1, 100000000000000657, 100000000000000657,SYSDATE, SYSDATE,
            1, (SELECT MAX(SERIALNO) + 1 FROM IM_NGIINDPOLICYCATEGORY), 0, 1,
            100000000000313952, 0, 2, 0,
            2, 0, 0, 0,
            0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 100000000000001994);
        COMMIT;
      L_RULES := INSERTTPATREATY(L_INDIVIDUALPOLICYCODE,1,100000000000000168);
      L_RULES := INSERTTPATREATY(L_INDIVIDUALPOLICYCODE,2,100000000000000173);
      L_RULES := INSERTTPATREATY(L_INDIVIDUALPOLICYCODE,3,100000000000000172);
      L_RULES := INSERTTPATREATY(L_INDIVIDUALPOLICYCODE,5,100000000000000041);
      Insert into ADDVANTAGE_LIVE.IM_IP_COMMISSION
      (IP_COMM_CODE, INDIVIDUALPOLICYCODE, COMISSION_TYPES, DEFAULTVALUE, CALC_METHOD, COMMISSION_VALUE, CREATEDIN, CREATEDON, CREATEDBY, LASTMODIFIEDON, LASTMODIFIEDBY, LEGALENTITYCODE, CUSTOMERCODE, LOCATIONCODE, SERIALNO, COMPANYCODE, COMMISSIONTO, INDPOLCYCOMMISIONTO)
      Values
      ((SELECT MAX(IP_COMM_CODE) + 1 FROM IM_IP_COMMISSION), L_INDIVIDUALPOLICYCODE, 1,L_DEFAULTVALUE, 1,
      L_DEFAULTVALUE, 1,SYSDATE, 100000000000000002,SYSDATE,
      100000000000000002, 100000000000000001, 100000000000000001,1,(SELECT MAX(SERIALNO) + 1 FROM IM_IP_COMMISSION),
      1, L_AGENTCODE,L_AGENTNAME);
      COMMIT;
      Insert into ADDVANTAGE_LIVE.IM_IP_COMMISSION
      (IP_COMM_CODE, INDIVIDUALPOLICYCODE, COMISSION_TYPES, DEFAULTVALUE, CALC_METHOD, COMMISSION_VALUE, CREATEDIN, CREATEDON, CREATEDBY, LASTMODIFIEDON, LASTMODIFIEDBY, LEGALENTITYCODE, CUSTOMERCODE, LOCATIONCODE, SERIALNO, COMPANYCODE, INDPOLCYCOMMISIONTO, GENERALCOMMBILLINGCODE)
      Values
      ((SELECT MAX(IP_COMM_CODE) + 1 FROM IM_IP_COMMISSION), L_INDIVIDUALPOLICYCODE, 2,5, 1,
      5, 1, SYSDATE, 100000000000000002,SYSDATE,
      100000000000000002, 100000000000000001, 100000000000000001, 1, (SELECT MAX(SERIALNO) + 1 FROM IM_IP_COMMISSION),
      1,'FMC TPA FEE AND CLAIMS FEE',100000000000000090);
      COMMIT;
    END IF;

    UPDATE IM_INDIVIDUALPOLICY SET AUTHORIZEDSTATUS = 1 WHERE INDIVIDUALPOLICYCODE = L_INDIVIDUALPOLICYCODE;
    COMMIT;
  ELSIF Upper(HDR.POLICYTYPE) = 'G' THEN  -- GROUP POLICY
    P_POLICYNAME := HDR.GROUPNAME||'-'||TO_CHAR(HDR.INCEPTIONDATE,'RRRR');   
    SELECT Count(*) INTO L_POLICYCOUNT FROM IM_POLICY WHERE POLICYID  = HDR.NEXTCAREPOLICYID;
    SELECT Count(*) INTO L_LICENSECOUNT FROM IM_GROUPS WHERE Upper(NATURE_OF_BUSSINESS) = Upper(HDR.TRADELICENSENO);
    IF L_LICENSECOUNT = 0 THEN
      Insert into ADDVANTAGE_LIVE.IM_GROUPS
      (GROUP_CODE,GROUP_NUMBER, GROUP_NAME, ADDRESS, REMARKS, CURRENCY_CODE, 
      NATURE_OF_BUSSINESS, STATUS, COMPANYCODE, CREATEDBY, LASTMODIFIEDBY, 
      CREATEDON, LASTMODIFIEDON, LOCATIONCODE, SERIALNO, GROUP_ID, 
      PARENT_GROUP, ISMANUALMEMBER, PICTURE, ISSTAFFNONEEDED, ISGROUPLOGONEEDED, 
      ISHATHNONEEDED, PRINTGROUPTYPE, REDCARDTEXT, USERNAME, PASSWORD)
      Values
      ((SELECT MAX(GROUP_CODE) + 1 FROM IM_GROUPS),HDR.TRADELICENSENO, HDR.GROUPNAME,NULL, NULL, 
      0, HDR.TRADELICENSENO, 0, 1, 100000000000000002, 
      100000000000000289, TO_DATE('01/03/2015 15:47:15', 'MM/DD/YYYY HH24:MI:SS'), 
      TO_DATE('01/19/2017 14:56:54', 'MM/DD/YYYY HH24:MI:SS'), 1, (SELECT MAX(SERIALNO) + 1 FROM IM_GROUPS), 
      HDR.TRADELICENSENO, NULL, 0, NULL, 0, 
      0, 0, 0, NULL, 'user', 
      '123456');
      COMMIT;  
    END IF;
    SELECT Max(GROUP_CODE) INTO L_GROUPCODE FROM IM_GROUPS WHERE Upper(NATURE_OF_BUSSINESS) = Upper(HDR.TRADELICENSENO);
    IF L_POLICYCOUNT > 0 THEN
      SELECT Count(*) INTO L_POLICYCOUNT FROM IM_POLICY WHERE PORTALMEMBERID  = HDR.MEMBERID;
      IF L_INDIVIDUALPOLICYCOUNT > 0 THEN
        INSERT INTO INSUPLOADERRORLOG (MENUID,REFERENCEKEY,ERRORCODE,ERRORNAME,DESCRIPTION) VALUES
        ('ID_TPACREATEPOLICY',P_PRIMKEY,'102','S.No :' || HDR.MEMBERID,'POLICY ALREADY EXISTS FOR THE MEMBER'||HDR.MEMBERID);
        COMMIT;
        P_RESULT := 2;
        DELETE FROM IM_POLICY_INSURER_SUBDTL WHERE POLICYINSURERDTLCODE IN
        (SELECT POLICYINSURERDTLCODE FROM IM_POLICY_INSURER_DTL WHERE INDIVIDUALPOLICYCODE IN
        (SELECT INDIVIDUALPOLICYCODE FROM IM_INDIVIDUALPOLICY WHERE PORTALMEMBERID IN
        (SELECT MEMBERID FROM IM_PORTAL_CREATEPOLICY_DTL WHERE LOGCODE = P_PRIMKEY AND Upper(POLICYTYPE) = 'G')));
        COMMIT;
        DELETE FROM IM_INDIVIDUALPOLICY WHERE PORTALMEMBERID IN
        (SELECT MEMBERID FROM IM_PORTAL_CREATEPOLICY_DTL WHERE LOGCODE = P_PRIMKEY AND Upper(POLICYTYPE) = 'G');
        COMMIT;
        DELETE FROM IM_POLICY_INSURER_SUBDTL WHERE POLICYINSURERDTLCODE IN
        (SELECT POLICYINSURERDTLCODE FROM IM_POLICY_INSURER_DTL WHERE POLICYCODE IN
        (SELECT POLICYCODE FROM IM_POLICY WHERE PORTALMEMBERID IN
        (SELECT MEMBERID FROM IM_PORTAL_CREATEPOLICY_DTL WHERE LOGCODE = P_PRIMKEY AND Upper(POLICYTYPE) = 'I')));
        COMMIT;
        DELETE FROM IM_INDIVIDUALPOLICY WHERE PORTALMEMBERID IN
        (SELECT MEMBERID FROM IM_PORTAL_CREATEPOLICY_DTL WHERE LOGCODE = P_PRIMKEY AND Upper(POLICYTYPE) = 'I');
        COMMIT;
        RETURN 'POLICY ALREADY EXISTS FOR THE MEMBER'||HDR.MEMBERID;
      END IF;
    ELSE
      Insert into ADDVANTAGE_LIVE.IM_POLICY
      (POLICYCODE, 
      POLICYID, POLICYNAME, STARTDATE, ENDDATE, GROUPCODE, 
      ISFRONTINGGROUP, CATEGORYCODE, PLANCODE, ACTIVE, CALCULATEFINE, 
      FINETEMPLATECODE, REMARKS, CREATEDIN, CREATEDON, CREATEDBY, 
      LASTMODIFIEDON, LASTMODIFIEDBY, COMPANYCODE, LOCATIONCODE, DEACTIVATEDON, 
      DEACTIVATEDBY, SERIALNO, FRONTINGSETTING, ANNUALLIMITTYPE, ALTLIMIT, 
      INPATIENT, IPLIMIT, OUTPATIENT, OPLIMIT, AUTHORIZEDSTATUS, 
      POLICYPREFIX, POLICYNO, POLICYSUFFIX, POLICYFULLNO, MEMBERCODE, 
      FINAL_PREMIUM, BASE_PERIMUM, PERIMUMCODE, ELEMENTTEMPLATECODE, ISMEMBERPOLICYCONVERTED, 
      UBIPCODE, COMMISIONTYPE, AGENTCODE, BROKERCODE, OWNERCODE, 
      OLDPOLICYCODE, RENEWALPOLICYCODE, REQUEST_SOURCE, HAADAPPROVALCODE, REINSURANCECODE, 
      PAYMENTMODE, CONTRACTTYPE, INSURANCECO, EXCELVALIDATE, TEMPLATECODE, 
      BILLINGTYPE, BRANCHCODE, POLICYSERIALNO, OLDFINAL_PREMIUM, POSTINGDONE, 
      NGI_FEES, INCEPTIONPREMIUM, ISCAPTIVE, ENTITYTYPE, ENTITYID, 
      CONTACTNUMBER, EMAILID, FRONTINGFEES, REINSURERTYPE, SUBREINSURERTYPE, 
      NOOFINSTALLMENT, EXCELFILENAME, TREATYHDRCODE, FACPERCENTAGE, INSURERCODE, 
      RIREFCODE, OLDMANAGEBY, A_POLICYTYPE, PERIMUMCODE_BK, PORTALMEMBERID)
      Values
      ((SELECT MAX(POLICYCODE) + 1 FROM IM_POLICY), HDR.NEXTCAREPOLICYID, P_POLICYNAME, 
      HDR.INCEPTIONDATE, HDR.INCEPTIONDATE + 364, 
      L_GROUPCODE, 0, NULL, NULL, 1, 
      0, NULL, NULL, 1, TO_DATE('03/13/2017 15:50:30', 'MM/DD/YYYY HH24:MI:SS'), 
      100000000000000997, TO_DATE('03/13/2017 15:56:41', 'MM/DD/YYYY HH24:MI:SS'), 100000000000000997, 1, 1, 
      TO_DATE('03/13/2017 15:50:30', 'MM/DD/YYYY HH24:MI:SS'), 100000000000000997, 
      (SELECT MAX(SERIALNO) + 1 FROM IM_POLICY), NULL, 2, 
      0, 2, 0, 2, 0, 
      1, NULL, NULL, NULL, '', 
      NULL, 0, 0, 1, NULL, 
      0, NULL, 0, 100000000000001541, NULL, 
      P_OWNERCODE, NULL, NULL, 4, NULL, 
      NULL, 0, 0, NULL, 0, 
      '65', 2, NULL, NULL, NULL, 
      1, 11, NULL, 0, NULL, 
      NULL, NULL, NULL, 0, 0, 
      0, NULL, NULL, NULL, 0, 
      NULL, NULL, NULL, 1, NULL, 
      NULL);
      COMMIT;
    END IF;

    IF P_RESULT = 2 THEN
      CONTINUE;
    END IF;


    SELECT  POLICYCODE INTO L_POLICYCODE FROM IM_POLICY WHERE POLICYID = HDR.NEXTCAREPOLICYID;   

    Insert into ADDVANTAGE_LIVE.IM_POLICY_CATEGORYDTL
    (PCDCODE, 
    POLICYCODE, CATEGORYCODE, ALTLIMIT, IPLIMIT, PLIMIT, 
    PLANCODE, CALCULATEFINE, ISFRONTINGGROUP, FRONTINGSETTING, COMPANYCODE, 
    CREATEDBY, LASTMODIFIEDBY, CREATEDON, LASTMODIFIEDON, LOCATIONCODE, 
    SERIALNO, OPLIMIT, REMARKS, ACTIVE, GROUPCODE, 
    MEMBERCODE, ROOMTYPE, EMGDETECTWINETWTYPE, EMGDETECTWINETWVALUE, EMGDETECTOONETWTYPE, 
    EMGDETECTOONETWVALUE, TOTALPREMIUM, UBIPCODE, LIMITTYPE, LIMITS, 
    CO_IN_TYPE, CO_IN_VALUE, OONDEDECTABLETYPE, OONDEDECTABLEVALUE, OONCO_IN_TYPE, 
    OONCO_IN_VALUE, DEDECTABLETYPE, DEDECTABLEVALUE, REPORTTEMPLATECODE, ELEMENTTEMPLATECODE, 
    HEALTHAPPROVELNO, ALERTCLAIMSTEAMREMARK)
    Values
    ((SELECT MAX(PCDCODE) + 1 FROM IM_POLICY_CATEGORYDTL), L_POLICYCODE, 100000000000000003, 0, 0, 
    NULL, 100000000000000214, 1, 0, NULL, 
    1, 100000000000000997, 100000000000000997, TO_DATE('03/13/2017 15:56:23', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE('03/13/2017 15:56:23', 'MM/DD/YYYY HH24:MI:SS'), 
    1, (SELECT MAX(SERIALNO) + 1 FROM IM_POLICY_CATEGORYDTL), 0, NULL, NULL, 
    100000000000017085, NULL, 0, 2, 0, 
    2, 0, 0, NULL, 0, 
    0, 0, 0, 0, 0, 
    0, 0, 0, 0, NULL, 
    NULL, NULL, 0);
    COMMIT;  
    IF SubStr(Upper(HDR.NEXTCAREPOLICYID),0,1) = 'N' THEN     
      L_RULES := INSERTTPATREATY(L_POLICYCODE,3,100000000000000164);
      L_RULES := INSERTTPATREATY(L_POLICYCODE,4,100000000000000164);
      Insert into ADDVANTAGE_LIVE.IM_POLICY_COMMISSION
      (POLICY_COMM_CODE, 
      POLICYCODE, COMISSION_TYPES, DEFAULTVALUE, CALC_METHOD, COMMISSION_VALUE, 
      CREATEDIN, CREATEDON, CREATEDBY, LASTMODIFIEDON, LASTMODIFIEDBY, 
      LEGALENTITYCODE, CUSTOMERCODE, LOCATIONCODE, SERIALNO, COMPANYCODE, 
      COMMISSIONTO, COMMISIONTONAME, GENERALCOMMBILLINGCODE)
      Values
      ((SELECT MAX(POLICY_COMM_CODE) + 1 FROM IM_POLICY_COMMISSION), L_POLICYCODE, 1, L_DEFAULTVALUE, 1, 
      0, 1, TO_DATE('03/13/2017 15:50:30', 'MM/DD/YYYY HH24:MI:SS'), 100000000000000997, TO_DATE('03/13/2017 15:50:30', 'MM/DD/YYYY HH24:MI:SS'), 
      100000000000000997, 100000000000000001, 100000000000000001, 1, (SELECT MAX(SERIALNO) + 1 FROM  IM_POLICY_COMMISSION), 
      1, NULL,L_AGENTNAME, NULL);
      Insert into ADDVANTAGE_LIVE.IM_POLICY_COMMISSION
      (POLICY_COMM_CODE, 
      POLICYCODE, COMISSION_TYPES, DEFAULTVALUE, CALC_METHOD, COMMISSION_VALUE, 
      CREATEDIN, CREATEDON, CREATEDBY, LASTMODIFIEDON, LASTMODIFIEDBY, 
      LEGALENTITYCODE, CUSTOMERCODE, LOCATIONCODE, SERIALNO, COMPANYCODE, 
      COMMISSIONTO, COMMISIONTONAME, GENERALCOMMBILLINGCODE)
      Values
      ((SELECT MAX(POLICY_COMM_CODE) + 1 FROM IM_POLICY_COMMISSION), L_POLICYCODE, 2, 5, 1, 
      0, 1, TO_DATE('03/13/2017 15:50:30', 'MM/DD/YYYY HH24:MI:SS'), 100000000000000997, TO_DATE('03/13/2017 15:50:30', 'MM/DD/YYYY HH24:MI:SS'), 
      100000000000000997, 100000000000000001, 100000000000000001, 1, (SELECT MAX(SERIALNO) + 1 FROM  IM_POLICY_COMMISSION), 
      1, NULL, 'NEXT CARE PREMIUM AND COM ACCOUNT', 100000000000000027);
      COMMIT; 
    ELSIF SubStr(Upper(HDR.NEXTCAREPOLICYID),0,1) = 'F' THEN    
      L_RULES := INSERTTPATREATY(L_POLICYCODE,1,100000000000000168);
      L_RULES := INSERTTPATREATY(L_POLICYCODE,2,100000000000000173);
      L_RULES := INSERTTPATREATY(L_POLICYCODE,3,100000000000000172);
      L_RULES := INSERTTPATREATY(L_POLICYCODE,5,100000000000000041);
      Insert into ADDVANTAGE_LIVE.IM_POLICY_COMMISSION
      (POLICY_COMM_CODE, 
      POLICYCODE, COMISSION_TYPES, DEFAULTVALUE, CALC_METHOD, COMMISSION_VALUE, 
      CREATEDIN, CREATEDON, CREATEDBY, LASTMODIFIEDON, LASTMODIFIEDBY, 
      LEGALENTITYCODE, CUSTOMERCODE, LOCATIONCODE, SERIALNO, COMPANYCODE, 
      COMMISSIONTO, COMMISIONTONAME, GENERALCOMMBILLINGCODE)
      Values
      ((SELECT MAX(POLICY_COMM_CODE) + 1 FROM IM_POLICY_COMMISSION), L_POLICYCODE, 1, L_DEFAULTVALUE, 1, 
      0, 1, TO_DATE('03/13/2017 15:50:30', 'MM/DD/YYYY HH24:MI:SS'), 100000000000000997, TO_DATE('03/13/2017 15:50:30', 'MM/DD/YYYY HH24:MI:SS'), 
      100000000000000997, 100000000000000001, 100000000000000001, 1, (SELECT MAX(SERIALNO) + 1 FROM  IM_POLICY_COMMISSION), 
      1, NULL,L_AGENTNAME, NULL);
      Insert into ADDVANTAGE_LIVE.IM_POLICY_COMMISSION
      (POLICY_COMM_CODE, 
      POLICYCODE, COMISSION_TYPES, DEFAULTVALUE, CALC_METHOD, COMMISSION_VALUE, 
      CREATEDIN, CREATEDON, CREATEDBY, LASTMODIFIEDON, LASTMODIFIEDBY, 
      LEGALENTITYCODE, CUSTOMERCODE, LOCATIONCODE, SERIALNO, COMPANYCODE, 
      COMMISSIONTO, COMMISIONTONAME, GENERALCOMMBILLINGCODE)
      Values
      ((SELECT MAX(POLICY_COMM_CODE) + 1 FROM IM_POLICY_COMMISSION), L_POLICYCODE, 2, 5, 1, 
      0, 1, TO_DATE('03/13/2017 15:50:30', 'MM/DD/YYYY HH24:MI:SS'), 100000000000000997, TO_DATE('03/13/2017 15:50:30', 'MM/DD/YYYY HH24:MI:SS'), 
      100000000000000997, 100000000000000001, 100000000000000001, 1, (SELECT MAX(SERIALNO) + 1 FROM  IM_POLICY_COMMISSION), 
      1, NULL, 'FMC TPA FEE AND CLAIMS FEE', 100000000000000090);
      COMMIT; 
    END IF;

    UPDATE IM_POLICY SET AUTHORIZEDSTATUS = 1 WHERE  POLICYCODE = L_POLICYCODE;
    COMMIT;  
  END IF;
END LOOP; 
P_RESULT := 1; 
RETURN 'OK';
EXCEPTION WHEN OTHERS THEN
P_RESULT := 2;
DELETE FROM IM_POLICY_INSURER_SUBDTL WHERE POLICYINSURERDTLCODE IN
(SELECT POLICYINSURERDTLCODE FROM IM_POLICY_INSURER_DTL WHERE INDIVIDUALPOLICYCODE IN
(SELECT INDIVIDUALPOLICYCODE FROM IM_INDIVIDUALPOLICY WHERE PORTALMEMBERID IN
(SELECT MEMBERID FROM IM_PORTAL_CREATEPOLICY_DTL WHERE LOGCODE = P_PRIMKEY AND Upper(POLICYTYPE) = 'G')));
COMMIT;
DELETE FROM IM_INDIVIDUALPOLICY WHERE PORTALMEMBERID IN
(SELECT MEMBERID FROM IM_PORTAL_CREATEPOLICY_DTL WHERE LOGCODE = P_PRIMKEY AND Upper(POLICYTYPE) = 'G');
COMMIT;
DELETE FROM IM_POLICY_INSURER_SUBDTL WHERE POLICYINSURERDTLCODE IN
(SELECT POLICYINSURERDTLCODE FROM IM_POLICY_INSURER_DTL WHERE POLICYCODE IN
(SELECT POLICYCODE FROM IM_POLICY WHERE PORTALMEMBERID IN
(SELECT MEMBERID FROM IM_PORTAL_CREATEPOLICY_DTL WHERE LOGCODE = P_PRIMKEY AND Upper(POLICYTYPE) = 'I')));
COMMIT;
DELETE FROM IM_INDIVIDUALPOLICY WHERE PORTALMEMBERID IN
(SELECT MEMBERID FROM IM_PORTAL_CREATEPOLICY_DTL WHERE LOGCODE = P_PRIMKEY AND Upper(POLICYTYPE) = 'I');
COMMIT;
L_ERROR:= SQLERRM;
RETURN L_ERROR;
END;
/

