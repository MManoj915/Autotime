CREATE OR REPLACE FUNCTION sf_nextcareproductiongrouppol

(
ACheckboxOption          NVARCHAR2 DEFAULT 'YYY',
ALANGUAGECODE NVARCHAR2 default 'en-US',
APOLICYNAME VARCHAR2 default '1000000000000003',
-- AINDIVIDUALPOLICYNAME VARCHAR2 default '1000000000000003',
AAdministeredBy VARCHAR2 DEFAULT '100000000000000001',
SDATE DATE DEFAULT SYSDATE,
EDATE DATE DEFAULT SYSDATE,
SNO NUMBER DEFAULT 1,
ENO NUMBER DEFAULT 1,
AAGENTNAME varchar default 'ALL',
ABROKERNAME varchar default 'ALL',
ABRANCHNAME Varchar default 'ALL',
PREFIX varchar default '2015'
)
RETURN NEXTCAREPROGROUPPOLTABLE
PipeLined IS
TableData NEXTCAREPROGROUPPOLTYPE := NEXTCAREPROGROUPPOLTYPE(NULL
,NULL,NULL,NULL,NULL,NULL
,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,null,NULL,NULL
);
TYPE LcurType IS REF CURSOR;
Lcur        LcurType;
LSTROPTION1 NVARCHAR2(1);
LSTROPTION2 NVARCHAR2(1);
LSTROPTION3 NVARCHAR2(1);
LSTROPTION4 NVARCHAR2(1);
LSTROPTION5 NVARCHAR2(1);
LSTROPTION6 NVARCHAR2(1);
LSTROPTION7 NVARCHAR2(1);
BEGIN
LSTROPTION1 := SUBSTR(ACheckboxOption, 1, 1); --Include SerialNo
LSTROPTION2 := SUBSTR(ACheckboxOption, 2, 1); --Include SerialNo
LSTROPTION3 := SUBSTR(ACheckboxOption, 3, 1); --Date
LSTROPTION4 := SUBSTR(ACheckboxOption, 4, 1); --Year
LSTROPTION5 := SUBSTR(ACHECKBOXOPTION, 5, 1); --Show Agent Performance Only
LSTROPTION6 := SUBSTR(ACHECKBOXOPTION, 6, 1); --Show Broker Performance Only
LSTROPTION7 := SUBSTR(ACHECKBOXOPTION, 7, 1); --Show Direct only

OPEN Lcur FOR
select Product,
ProductName,
DocumentNo,
Dates,
DECODE(MEMOTYPE,1,nvl(GrossPremium,0),0,(-1 * nvl(GrossPremium,0)))  GrossPremium,
Agent,
nvl(AgentCOM,0) AgentCOM,
Introducer,
nvl(INTROCOM,0) IntroCOM,
nvl(TPAFEES,0) TPAFEES,
round(nvl(GrossPremium,0)*(NGIFEES/100),2)  NGIFEES,
DECODE(MEMOTYPE,1,(nvl(GrossPremium,0)+nvl(INTROCOM,0)+nvl(TPAFEES,0) +nvl(AGENTCOM,0)+nvl(round(nvl(GrossPremium,0)*(NGIFEES/100),2) ,0)),0,
((-1 * (nvl(GrossPremium,0))+nvl(INTROCOM,0)+nvl(TPAFEES,0) +nvl(AGENTCOM,0)+nvl(round(nvl(GrossPremium,0)*(NGIFEES/100),2) ,0)))) NetPremium,
SDATE STARTDATE,
EDATE ENDDATE,
--DECODE(LSTROPTION2, 'Y', 1, 0) NEXTCAREPRODUCTIONLABLE ,
DECODE(LSTROPTION1, 'Y', 1, 0) IsSeriaNoNeeded,
AdministredBy ,
BranchName,
case when AgentComType =0 then
'Agent' when AgentComType=1 then 'Broker'
else
'Direct'
end  CommisionType,UWYEAR
from (
select pol.policyid Product,
pol.policyname PRODUCTNAME ,
--(select min(REF_NO) from IM_NGI_JVPOSTING where sourcecode=1 and JVPREMIUMTYPE = 0 AND REF_CODE=POLEND.POLICYFINANCEPOSTINGCODE) DocumentNo,
JVPOS.REF_NO DocumentNo,
JVPOS.REFDATE Dates,
--(select sum(case when MEMOTYPE = 1 then ABS(AMOUNT) else decode(SIGN(AMOUNT),1,-AMOUNT,AMOUNT)  end) TOTALPREM from IM_NGI_JVPOSTING POLFIN where POLFIN.REF_CODE = POLEND.POLICYFINANCEPOSTINGCODE and MEMBERTYPE in(2,3)) GrossPremium,
JVPOS.AMOUNT as GrossPremium,
(select nvl(max(POLFIN.MEMBERTYPE),2) from IM_NGI_JVPOSTING POLFIN --COMISSION_TYPES, COMMISSIONTO
where POLFIN.REF_CODE = POLEND.POLICYFINANCEPOSTINGCODE and POLFIN.MEMBERTYPE in(0,1)) AgentComType,
(select max(nvl(AGT.AGENT_NAME_EN,BRK.BROKER_NAME_EN)) from IM_NGI_JVPOSTING POLFIN --COMISSION_TYPES, COMMISSIONTO
left join IM_AGENTS AGT on POLFIN.MEMBERTYPE=0 and AGT.AGENTCODE=POLFIN.AGENTCODE
left join IM_BROKERS BRK on POLFIN.MEMBERTYPE=1 and BRK.BROKERCODE =POLFIN.BROKERCODE
where POLFIN.REF_CODE = POLEND.POLICYFINANCEPOSTINGCODE and POLFIN.MEMBERTYPE in(0,1)) Agent,
(select max(nvl(AGT.AGENT_ID,BRK.BROKER_ID)) from IM_NGI_JVPOSTING POLFIN --COMISSION_TYPES, COMMISSIONTO
left join IM_AGENTS AGT on POLFIN.MEMBERTYPE=0 and AGT.AGENTCODE=POLFIN.AGENTCODE
left join IM_BROKERS BRK on POLFIN.MEMBERTYPE=1 and BRK.BROKERCODE =POLFIN.BROKERCODE
where POLFIN.REF_CODE = POLEND.POLICYFINANCEPOSTINGCODE and POLFIN.MEMBERTYPE in(0,1)) AgentID,
--(select sum(case when MEMOTYPE = 1 then ABS(AMOUNT) else decode(SIGN(AMOUNT),1,-AMOUNT,AMOUNT) end)  TOTALPREM from IM_NGI_JVPOSTING POLFIN where POLFIN.REF_CODE = POLEND.POLICYFINANCEPOSTINGCODE and MEMBERTYPE in(0,1)) AgentCOM ,
sf_getfmcprodcommission_fnc(polend.POLICYFINANCEPOSTINGCODE,1,jvpos.amount,MEMOTYPE,JVPOS.REF_NO) as AgentCOM,
--(select max(AGT.INS_NAME) TOTALPREM from IM_NGI_JVPOSTING POLFIN --COMISSION_TYPES, COMMISSIONTO
--join IM_INSURER AGT on POLFIN.MEMBERTYPE=6 and POLFIN.INSURERCODE= AGT.INSCODE
--where POLFIN.REF_CODE = POLEND.POLICYFINANCEPOSTINGCODE and MEMBERTYPE=6)  Introducer,
(select max(AGT.INS_NAME) TOTALPREM from IM_PFPCOMMISSIONDTL POLFIN --COMISSION_TYPES, COMMISSIONTO
left join IM_INSURER AGT on POLFIN.COMISSION_TYPES =3 and POLFIN.COMMISSIONTO= AGT.INSCODE
left join IM_GENERAL_COMM_BILLING_DETAIL Bill on POLFIN.COMISSION_TYPES not in (0,1) and POLFIN.COMMISSIONTO= Bill.GENERALCOMMBILLINGCODE
where POLFIN.POLICYFINANCEPOSTINGCODE = POLEND.POLICYFINANCEPOSTINGCODE)  Introducer,
--(select sum(case when MEMOTYPE = 1 then ABS(AMOUNT) else decode(SIGN(AMOUNT),1,-AMOUNT,AMOUNT) end)  TOTALPREM from IM_NGI_JVPOSTING POLFIN where POLFIN.REF_CODE = POLEND.POLICYFINANCEPOSTINGCODE and MEMBERTYPE=6)  IntroCOM ,
sf_getfmcprodcommission_fnc(polend.POLICYFINANCEPOSTINGCODE,2,jvpos.amount,MEMOTYPE,JVPOS.REF_NO) as IntroCOM,
SF_GETFMCPRODCOMMISSION_FNC(polend.POLICYFINANCEPOSTINGCODE,3,jvpos.amount,MEMOTYPE,JVPOS.REF_NO) as TPAFEES,
DECODE(JVPOS.MEMOTYPE,1,nvl((pol.NGI_FEES),0)*-1,nvl((pol.NGI_FEES),0)*1)  NGIFEES,
(select nvl(max(DEFAULTVALUE),0) from IM_POLICY_COMMISSION polcom where pol.policycode=polcom.policycode and COMISSION_TYPES in (0,1)) AGENTPRECENTAGE,
(select nvl(max(REINSURANCE_NPQ),0) from IM_POLICY_SHARINGDTL polcom where pol.policycode=polcom.policycode )   NEXTCAREFEEPRECEN,
(nvl(pol.NGI_FEES,0)*-1) NGIFEEPRECEN,
'' STATUS,JVPOS.MEMOTYPE,
gen10.CONSTANTNAME AdministredBy,
aorg.ORGANIZATION_NAME BranchName,
case when nvl(pol.AgentCode,0) >0 then
'Agent' when nvl(pol.BROKERCODE,0) >0 then 'Broker'
else
'Direct'
end CommisionType,To_Char(pol.startdate,'RRRR') UWYEAR
from (select * from IM_POLICYFINANCEPOSTING where POLICYFINANCEPOSTINGCODE <> 100000000000010692
 ) POLEND
JOIN IM_NGI_JVPOSTING JVPOS ON JVPOS.REF_CODE = POLEND.POLICYFINANCEPOSTINGCODE AND SOURCECODE = 1 AND JVPREMIUMTYPE = 0
join im_policy pol on POLEND.POLICYCODE=POL.POLICYCODE and POLEND.policytypecode = 1
--and (LSTROPTION2='N' OR to_date(nvl(POL.ENDDATE,sysdate) ,'DD/MM/RRRR')  <= to_date(sysdate,'DD/MM/RRRR') )    -- and Pol.OWNERCODE in (1,4)
left join im_Agents agnt on agnt.AgentCode=pol.AgentCode
left join im_Brokers Bro on Bro.BROKERCODE=pol.BROKERCODE
left join HR_ORGANIZATIONS_D aorg on aorg.ORGANIZATIONS_CODE=(nvl(pol.BRANCHCODE,decode(pol.BILLINGTYPE,0, agnt.BRANCHCODE,1,Bro.BRANCHCODE,nvl(pol.BRANCHCODE,nvl(agnt.BRANCHCODE,Bro.BRANCHCODE)))))
left join genconstant gen10 on GEN10.CONSTANTVALUE=POL.OWNERCODE and GEN10.CATEGORY='NGIQUOTATIONTYPE' and GEN10.LANGUAGECODE='en-US'
where
(APOLICYNAME ='ALL' or POL.POLICYCODE IN(SELECT * FROM TABLE(FN_GETPORTALCRITERIA(APOLICYNAME ,'PolicyName',-1,-1,-1,-1,-1,1,ALANGUAGECODE)))) and
(AAdministeredBy ='ALL' or POL.OWNERCODE IN(SELECT * FROM TABLE(FN_GETPORTALCRITERIA(AAdministeredBy ,'AdministeredBy',-1,-1,-1,-1,-1,1,ALANGUAGECODE)))) and
(AAGENTNAME ='ALL' or pol.AGENTCODE IN(SELECT * FROM TABLE(FN_GETPORTALCRITERIA(AAGENTNAME ,'AgentName',-1,-1,-1,-1,-1,1,ALANGUAGECODE)))) and
(ABROKERNAME ='ALL' or pol.BrokerCode IN(SELECT * FROM TABLE(FN_GETPORTALCRITERIA(ABROKERNAME ,'BrokerName',-1,-1,-1,-1,-1,1,ALANGUAGECODE)))) and
(ABRANCHNAME ='ALL' or pol.BranchCode IN(SELECT * FROM TABLE(FN_GETPORTALCRITERIA(ABRANCHNAME ,'BranchName',-1,-1,-1,-1,-1,1,ALANGUAGECODE)))) AND
(to_date(JVPOS.REFDATE,'DD/MM/YYYY') BETWEEN to_date(SDATE,'DD/MM/YYYY')  AND to_date(EDATE,'DD/MM/YYYY') )
)
where
(LSTROPTION5='N' OR  AgentComType=0 ) and (LSTROPTION6='N' OR  AgentComType=1)  and (LSTROPTION7='N' OR  AgentComType not in (0,1) )  and
DocumentNo is not null and (nvl(GrossPremium,0)+nvl(INTROCOM,0) +nvl(AGENTCOM,0)+nvl(NGIFEES,0))<>0 and
(SNO=0 or (nvl(GrossPremium,0)+nvl(INTROCOM,0) +nvl(AGENTCOM,0)+nvl(NGIFEES,0))>=SNO) and
(ENO=0 or (nvl(GrossPremium,0)+nvl(INTROCOM,0) +nvl(AGENTCOM,0)+nvl(NGIFEES,0))<=ENO)

;


LOOP
FETCH Lcur
INTO
TableData.Product,
TableData.ProductName,
TableData.DocumentNo,
TableData.Dates,
TableData.GrossPremium,
TableData.Agent,
TableData.AgentCOM,
TableData.Introducer,
TableData.IntroCOM,
TABLEDATA.TPAFEES,
TableData.NGIFEES,
TableData.NetPremium,
TableData.STARTDATE,
TableData.ENDDATE,
TableData.IsSeriaNoNeeded,
TableData.AdministredBy,
TableData.BRANCHNAME,
TableData.COMMISIONTYPE,
TABLEDATA.UWYEAR
;
EXIT WHEN LCUR%NOTFOUND;
PIPE ROW(TABLEDATA);
END LOOP;
CLOSE LCUR;
END SF_NEXTCAREPRODUCTIONGROUPPOL;
/

