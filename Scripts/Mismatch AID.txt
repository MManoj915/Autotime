DECLARE L_RULES VARCHAR2(500);
BEGIN
FOR HDR IN(SELECT * FROM(SELECT SUM(AAMT) AAMT,SUM(CAMT) CAMT,MAP_VALUE FROM(SELECT 0 AAMT,SUM(DTL.REQUESTAMOUNT) CAMT,HDR.MAP_VALUE FROM IM_CLAIM_PROCESS_HEADER HDR
LEFT JOIN IM_CLAIM_PROCESS_DETAIL DTL ON DTL.CLAIM_CODE = HDR.CLAIM_CODE
WHERE  HDR.CLAIM_STATUS = 2 AND Nvl(AUTHORIZEDSTATUS,0) = 0   AND NVL(DTL.TYPE,0) = 0
GROUP BY HDR.MAP_VALUE
UNION ALL
SELECT SUM(DTL.ACTIVITY_NET)  AAMT,0 CAMT,HDR.SYS_CLAIM_ID FROM ECLAIMS HDR
LEFT JOIN ECLAIM_ACTIVITIES DTL ON DTL.SYS_CLAIM_ID = HDR.SYS_CLAIM_ID
WHERE  HDR.SYS_CLAIM_ID IN(SELECT MAP_VALUE FROM  IM_CLAIM_PROCESS_HEADER
WHERE  CLAIM_STATUS = 2 AND Nvl(AUTHORIZEDSTATUS,0) = 0 )
GROUP BY HDR.SYS_CLAIM_ID ) GROUP BY MAP_VALUE) WHERE AAMT <> CAMT AND MAP_VALUE IS NOT NULL ) LOOP
L_RULES:=NGI_LOADCLAIMS_PRO.NGI_REPROCESS_MISSING_DETAIL(HDR.MAP_VALUE);
END LOOP;
END;

                                                



 DECLARE L_RULES VARCHAR2(500);
BEGIN
FOR HDR IN(SELECT * FROM(SELECT SUM(AAMT) AAMT,SUM(CAMT) CAMT,MAP_VALUE FROM(SELECT 0 AAMT,SUM(DTL.REQUESTAMOUNT) CAMT,HDR.MAP_VALUE FROM IM_CLAIM_PROCESS_HEADER HDR
LEFT JOIN IM_CLAIM_PROCESS_DETAIL DTL ON DTL.CLAIM_CODE = HDR.CLAIM_CODE
WHERE  HDR.CLAIM_STATUS =1   AND NVL(DTL.TYPE,0) = 0
GROUP BY HDR.MAP_VALUE
UNION ALL
SELECT SUM(DTL.ACTIVITY_NET)  AAMT,0 CAMT,HDR.SYS_CLAIM_ID FROM ECLAIMS HDR
LEFT JOIN ECLAIM_ACTIVITIES DTL ON DTL.SYS_CLAIM_ID = HDR.SYS_CLAIM_ID
WHERE  HDR.SYS_CLAIM_ID IN(SELECT MAP_VALUE FROM  IM_CLAIM_PROCESS_HEADER
WHERE  CLAIM_STATUS =1)
GROUP BY HDR.SYS_CLAIM_ID ) GROUP BY MAP_VALUE) WHERE AAMT <> CAMT AND MAP_VALUE IS NOT NULL ) LOOP
L_RULES:=NGI_LOADCLAIMS_PRO.NGI_REPROCESS_MISSING_DETAIL(HDR.MAP_VALUE);
END LOOP;
END;



DECLARE L_RULES VARCHAR2(500);
BEGIN
FOR HDR IN(SELECT * FROM(SELECT SUM(AAMT) AAMT,SUM(CAMT) CAMT,MAP_VALUE FROM(SELECT 0 AAMT,SUM(DTL.REQUESTAMOUNT) CAMT,HDR.MAP_VALUE FROM IM_CLAIM_PROCESS_HEADER HDR
LEFT JOIN IM_CLAIM_PROCESS_DETAIL DTL ON DTL.CLAIM_CODE = HDR.CLAIM_CODE
WHERE  HDR.CLAIM_STATUS = 2 AND Nvl(AUTHORIZEDSTATUS,0) = 0   AND NVL(DTL.TYPE,0) = 0
GROUP BY HDR.MAP_VALUE
UNION ALL
SELECT SUM(DTL.ACTIVITY_NET)  AAMT,0 CAMT,HDR.SYS_CLAIM_ID FROM ECLAIMS HDR
LEFT JOIN ECLAIM_ACTIVITIES DTL ON DTL.SYS_CLAIM_ID = HDR.SYS_CLAIM_ID
WHERE  HDR.SYS_CLAIM_ID IN(SELECT MAP_VALUE FROM  IM_CLAIM_PROCESS_HEADER
WHERE  CLAIM_STATUS = 2 AND Nvl(AUTHORIZEDSTATUS,0) = 0 )
GROUP BY HDR.SYS_CLAIM_ID ) GROUP BY MAP_VALUE) WHERE AAMT <> CAMT AND MAP_VALUE IS NOT NULL ) LOOP    

FOR DTL IN (SELECT * FROM ECLAIM_ACTIVITIES WHERE SYS_CLAIM_ID = HDR.MAP_VALUE) LOOP

  UPDATE IM_CLAIM_PROCESS_DETAIL SET REQUESTAMOUNT = DTL.ACTIVITY_NET WHERE MAP_vALUE = DTL.SYS_ACTIVITY_ID
  AND   SYS_ACTIVITY_ID = DTL.SYS_ACTIVITY_ID AND CLAIM_CODE IN
  (SELECT CLAIM_CODE FROM IM_CLAIM_PROCESS_HEADER WHERE MAP_VALUE = HDR.MAP_VALUE);
  COMMIT;


END LOOP;

END LOOP;
END;

                 




                         