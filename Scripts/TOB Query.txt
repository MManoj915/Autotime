Master and Group :

SELECT  DISTINCT
TO_NUMBER(CATDTL.PCDCODE) PLANCODE,
(CAT.CATEGORY_NAME||' - '||PLA.PLAN_NAME) PLAN_NAME,
BEN.BENEFIT_ID,
BEN.BENEFIT_NAME,
(SELECT BEN1.BENEFIT_NAME BENEFITNAME FROM IIM_BENEFIT_CODES_DET SUBDET
LEFT JOIN IM_BENEFIT_CODES BEN1 ON BEN1.BENEFIT_CODE=SUBDET.BENEFIT_CODE WHERE SUBDET.SUB_BENEFIT_CODE= BEN.BENEFIT_CODE AND ROWNUM=1)PARENTNAME,
TO_NUMBER(NVL(BENSET.LIMITS,0)) LIMITS,
TO_NUMBER(NVL(BENSET.CO_IN_VALUE,0)) CO_IN_VALUE,
TO_NUMBER(NVL(BENSET.DEDECTABLEVALUE,0)) DEDECTABLEVALUE,
TO_NUMBER(NVL(BENSET.OONDEDECTABLEVALUE,0)) OONDEDECTABLEVALUE,
TO_NUMBER(NVL(BENSET.OONCO_IN_VALUE,0)) OONCO_IN_VALUE,
TO_NUMBER(NVL(BENSET.EMGDETECTWINETWVALUE,0)) EMGDETECTWINETWVALUE,
0 OUTOFNETSUBLIMIT,
TO_NUMBER(NVL(BENSET.EMGDETECTOONETWVALUE,0)) EMGDETECTOONETWVALUE,
TO_NUMBER(NVL(BENSET.WNSUBLIMIT,0)) WNSUBLIMIT,
TO_NUMBER(NVL(BENSET.NUMBEROFVISITS,0)) AS NUMBEROFVISITS,
0 ISSERIANONEEDED ,
IMP.POLICYID,
IMP.POLICYNAME,
IMP.STARTDATE,
IMP.ENDDATE,
TO_NUMBER(TO_CHAR(IMP.STARTDATE,'YYYY')) AS UW_YEAR,
NVL(CATDTL.ALTLIMIT, IMP.ALTLIMIT) AS ALTLIMIT,
'GROUP' AS POLICYTYPE,
NVL(AGT.AGENT_NAME_EN,BRO.BROKER_NAME_EN) AS AGENT_BROKERNAME,
CON.CONSTANTNAME AS ADMINISTRATORBYNAME,
CATDTL.HEALTHAPPROVELNO ,
NVL2(CATDTL.HEALTHAPPROVELNO,'','Y') AS SHOWHAADNO,
CATDTL.POLICYCODE,
CATDTL.OONCO_IN_VALUE AS CATOONCO_IN_VALUE,
CATDTL.OONDEDECTABLEVALUE AS CATOONDEDECTABLEVALUE,
CATDTL.CO_IN_VALUE  AS CATCO_IN_VALUE,
CATDTL.DEDECTABLEVALUE AS CATDEDECTABLEVALUE,
(SELECT FNGETLISTSQL('SELECT NETWORKNAME  FROM  IM_NETWORKS NW
JOIN  IM_POLICYCOVEREDNETWORK CATDTL ON NW.NETWORKCODE=CATDTL.NETWORKCODE AND CATDTL.ACTIVE=1
WHERE PCDCODE = '||CATDTL.PCDCODE  ,',') SHORTNAME FROM DUAL )AS NETWORKNAME,
'' AS NETWORKID   
FROM --NGIQUOTATIONTYPE  ADMINISTYPE
IM_POLICY_CATEGORYDTL CATDTL
JOIN IM_POLICY IMP ON IMP.POLICYCODE=CATDTL.POLICYCODE
LEFT JOIN IM_AGENTS AGT ON AGT.AGENTCODE=NVL(IMP.AGENTCODE,0)
LEFT JOIN IM_BROKERS BRO ON BRO.BROKERCODE =NVL(IMP.BROKERCODE,0)
JOIN GENCONSTANT CON ON CON.CONSTANTVALUE=IMP.OWNERCODE AND CON.CATEGORY='NGIQUOTATIONTYPE' AND CON.LANGUAGECODE='en-US'
JOIN IM_CATEGORIES CAT ON CAT.CATEGORY_CODE=CATDTL.CATEGORYCODE AND CATDTL.ACTIVE=1  AND CATDTL.POLICYCODE = APRIMKEY
JOIN IM_POLICYBEBEFITS POLB ON POLB.PCDCODE=CATDTL.PCDCODE AND POLB.ACTIVE=1
JOIN IM_PLANS PLA ON PLA.PLAN_CODE=CATDTL.PLANCODE
JOIN IM_BENEFIT_CODES BEN ON BEN.BENEFIT_CODE=POLB.BENEFIT_CODE
LEFT JOIN IM_POLICY_BENEFITSETTING BENSET ON BENSET.BENEFITCODE=POLB.BENEFIT_CODE AND BENSET.REQTYPE=0 AND  BENSET.CATEGORYCODE=CATDTL.CATEGORYCODE AND BENSET.POLICYCODE=CATDTL.POLICYCODE
;

Basic Premium Sub Report

SELECT
PCAL.PCDCODE,
NVL(PCAL.AGEFROM,0) AS AGEFROM,
PCAL.AGETO,
PCAL.PREMIUM,
GEN.CONSTANTNAME GENDERNAME,
GEN1.CONSTANTNAME APPLICABLEFORNAME
FROM IM_POLCATESETTINGAGELIMITS PCAL
LEFT JOIN GENCONSTANT GEN1 ON GEN1.CONSTANTVALUE=PCAL.APPLICABLEFOR AND GEN1.CATEGORY='MARITAL_STATUS' AND GEN1.LANGUAGECODE='en-US'
LEFT JOIN GENCONSTANT GEN ON GEN.CONSTANTVALUE=PCAL.GENDERCODE AND GEN.CATEGORY='GENDER' AND GEN.LANGUAGECODE='en-US'
AND PCAL.PCDCODE = APLANCODE;

Additional Premium Sub Report

SELECT
BEN.BENEFIT_NAME,
BA.AGEFROM,
BA.AGETO,
BA.PREMIUM,
GEN.CONSTANTNAME GENDERNAME,
GEN1.CONSTANTNAME APPLICABLEFORNAME,
CATE.PCDCODE,
CATE.POLICYCODE,
CATE.CATEGORYCODE
FROM  IM_POLICY_CATEGORYDTL  CATE
JOIN  IM_POLICYBEBEFITS POLBEN ON  POLBEN.PCDCODE =CATE.PCDCODE
JOIN IM_BENEFIT_CODES BEN ON BEN.BENEFIT_CODE =POLBEN.BENEFIT_CODE
JOIN (SELECT  MAX(BENEFITSETTINGCODE) BENEFITSETTINGCODE,POLICYCODE,CATEGORYCODE,BENEFITCODE,REQTYPE
FROM IM_POLICY_BENEFITSETTING WHERE  BENEFITSETTINGCODE IN(SELECT BENEFITSETTINGCODE FROM IM_BENSETTINGAGELIMITS)
GROUP BY POLICYCODE,CATEGORYCODE,BENEFITCODE,REQTYPE) BENSET ON BENSET.POLICYCODE =CATE.POLICYCODE AND
BENSET.BENEFITCODE =BEN.BENEFIT_CODE AND BENSET.CATEGORYCODE =CATE.CATEGORYCODE AND BENSET.REQTYPE =0
JOIN IM_BENSETTINGAGELIMITS BA ON BA.BENEFITSETTINGCODE=BENSET.BENEFITSETTINGCODE
LEFT JOIN GENCONSTANT GEN1 ON GEN1.CONSTANTVALUE=BA.APPLICABLEFOR AND GEN1.CATEGORY='MARITAL_STATUS' AND GEN1.LANGUAGECODE='en-US'
LEFT JOIN GENCONSTANT GEN ON GEN.CONSTANTVALUE=BA.GENDERCODE AND GEN.CATEGORY='GENDER' AND GEN.LANGUAGECODE='en-US'
WHERE CATE.PCDCODE = APLANCODE;


Commission detail

SELECT PCO.POLICYCODE,
GEN.CONSTANTNAME COMISSIONTYPENAME,
PCO.DEFAULTVALUE,
PCO.COMMISSION_VALUE,
GEN1.CONSTANTNAME CALCMETHODNAME,
NVL(COM.COMMISIONNAME,COMMISIONTONAME) AS COMMISIONNAME,
COMBILL.COMMISSIONNAME COMMISSIONNAMEE
FROM IM_POLICY_COMMISSION PCO
LEFT JOIN GENCONSTANT GEN ON GEN.CONSTANTVALUE=PCO.COMISSION_TYPES AND GEN.CATEGORY='NGICOMMISSIONTYPE' AND GEN.LANGUAGECODE='en-US'
LEFT JOIN GENCONSTANT GEN1 ON GEN1.CONSTANTVALUE=PCO.CALC_METHOD AND GEN1.CATEGORY='FINECALCULATIONTYPE' AND GEN1.LANGUAGECODE='en-US'
LEFT JOIN IM_GENERAL_COMM_BILLING_DETAIL COMBILL ON COMBILL.GENERALCOMMBILLINGCODE=PCO.GENERALCOMMBILLINGCODE
LEFT JOIN (SELECT AGE.AGENTCODE COMMISIONTOCODE, AGE.AGENT_ID COMMISIONID, AGE.AGENT_NAME_EN COMMISIONNAME ,1 TYPECODE FROM IM_AGENTS AGE UNION ALL
SELECT BRO.BROKERCODE COMMISIONTOCODE, BRO.BROKER_ID COMMISIONID, BRO.BROKER_NAME_EN COMMISIONNAME,0 TYPECODE FROM IM_BROKERS BRO) COM ON  
COM.COMMISIONTOCODE=PCO.COMMISSIONTO  AND COM.TYPECODE=PCO.COMISSION_TYPES
WHERE PCO.POLICYCODE = APRIMKEY;

APLANCODE - 100000000000019152
APRIMKEY - 100000000000021433                                                  
