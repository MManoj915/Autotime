CREATE OR REPLACE FUNCTION fn_policyfinanceposting
 (
  ATypeCode number default 1,
  APolicyCode  number default 100000000000000139,
  ATPASource NUMBER DEFAULT 1,
  ATPAProductionCode NUMBER DEFAULT 1
)
RETURN POLICYFINANCEPOSTINGTABLE PIPELINED IS
PRAGMA AUTONOMOUS_TRANSACTION;
TABLEDATA POLICYFINANCEPOSTINGTYPE := POLICYFINANCEPOSTINGTYPE
(
 NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
);
TYPE LCURTYPE IS REF CURSOR;
LCUR LCURTYPE;
L_COUNT NUMBER;
L_DELPREMIUM NUMBER;
L_ADDPREMIUM NUMBER;
BEGIN
FOR HDR IN(SELECT * FROM
(SELECT MEM.CARDID,MEM.MEMBER_ID,
(MEM.FIRST_NAME||''||MEM.LAST_NAME) MEMBERNAME,
MEM.EFFECTIVE_START_DATE  STARTDATE,
MEM.EFFECTIVE_END_DATE ENDDATE,MEMP.TYPEE,MEMP.POLICYCODE,MEMP.MEMBERPOLICYCODE,CAT.CATEGORY_NAME,
NVL(MEM.PARENTGROUPCODE,MEM.GROUP_CODE) GROUPCODE
FROM IM_MEMBERPOLICY MEMP
JOIN IM_MEMBERS MEM ON MEMP.MEMBERCODE=MEM.MEMBER_CODE
LEFT  JOIN IM_CATEGORIES  CAT ON CAT.CATEGORY_CODE=MEMP.CATEGORYCODE
WHERE MEMP.TYPEE=ATYPECODE AND  MEMP.POLICYCODE=APOLICYCODE
AND NVL(ATPASOURCE,0) = 0
AND (NVL(FINANCEPOSTDONEFORADDITION,1)+NVL(FINANCEPOSTDONEFORDELETION,1))<>2 -- AND (MEMP.FINANCEPOSTDONEFORADDITION IS NOT NULL OR (SELECT COUNT(*) FROM IM_MEMPOLICYREFUNDPREMDTL DTL WHERE MEMP.MEMBERPOLICYCODE=DTL.MEMBERPOLICYCODE)>0)-- OR MEMP.FINANCEPOSTDONEFORDELETION IS NOT NULL
) POL 
UNION
SELECT * FROM
(SELECT NVL(MEM.CARDID,MEM.CARDNO),MEM.MEMBER_ID,
(MEM.FIRST_NAME||''||MEM.LAST_NAME) MEMBERNAME,
MEM.EFFECTIVE_START_DATE  STARTDATE,
MEM.EFFECTIVE_END_DATE ENDDATE,MEMP.TYPEE,MEMP.POLICYCODE,MEMP.MEMBERPOLICYCODE,CAT.CATEGORY_NAME,
NVL(MEM.PARENTGROUPCODE,MEM.GROUP_CODE) GROUPCODE
FROM IM_MEMBERPOLICY MEMP
JOIN IM_REINS_MEMBERS MEM ON MEMP.REINSMEMBERCODE=MEM.MEMBER_CODE
LEFT  JOIN IM_CATEGORIES  CAT ON CAT.CATEGORY_CODE=MEM.CATEGORY_CODE
WHERE  MEMP.TYPEE=ATYPECODE AND  MEMP.POLICYCODE=APOLICYCODE
AND (ACARDID IN (
SELECT FMCCARDNO FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE
IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE  NVL(STATUS,0) = 0 AND SOURCETYPE = ATPASOURCE
AND  NEXTCAREPRODHDRCODE = DECODE(NVL(ATPAPRODUCTIONCODE,0),0,NEXTCAREPRODHDRCODE,ATPAPRODUCTIONCODE))
UNION ALL
SELECT FMCCARDNO FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE
IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE NVL(STATUS,0) = 0 AND SOURCETYPE = ATPASOURCE AND TPAPRODHDRCODE = DECODE(NVL(ATPAPRODUCTIONCODE,0),0,TPAPRODHDRCODE,ATPAPRODUCTIONCODE))))
AND (NVL(FINANCEPOSTDONEFORADDITION,1)+NVL(FINANCEPOSTDONEFORDELETION,1))<>2 -- AND (MEMP.FINANCEPOSTDONEFORADDITION IS NOT NULL OR (SELECT COUNT(*) FROM IM_MEMPOLICYREFUNDPREMDTL DTL WHERE MEMP.MEMBERPOLICYCODE=DTL.MEMBERPOLICYCODE)>0)-- OR MEMP.FINANCEPOSTDONEFORDELETION IS NOT NULL
) POL) LOOP

SELECT SUM(NVL(PREMIUM_VALUE,0)) INTO L_ADDPREMIUM FROM IM_MEMBERPOLICYPREMIUMDTL where MEMBERPOLICYCODE=HDR.MEMBERPOLICYCODE;
SELECT SUM(NVL(PREMIUM_VALUE,0)) INTO L_DELPREMIUM FROM IM_MEMPOLICYREFUNDPREMDTL where MEMBERPOLICYCODE=HDR.MEMBERPOLICYCODE;

SELECT COUNT(*) INTO L_COUNT FROM IM_MP_PREMIUM WHERE  MEMBERPOLICYCODE=HDR.MEMBERPOLICYCODE;
IF L_COUNT = 0 THEN
INSERT INTO IM_MP_PREMIUM
SELECT HDR.MEMBERPOLICYCODE,L_ADDPREMIUM,L_DELPREMIUM FROM DUAL;
COMMIT;
ELSE
UPDATE IM_MP_PREMIUM SET ADDPREMIUM = L_ADDPREMIUM,REFUNDPREMIUM = L_DELPREMIUM
WHERE  MEMBERPOLICYCODE=HDR.MEMBERPOLICYCODE;
COMMIT;
END IF;


END LOOP;
OPEN LCUR FOR

select * from
(Select MEM.CARDID,MEM.MEMBER_ID,
(MEM.FIRST_NAME||''||MEM.LAST_NAME) MemberName,
mem.EFFECTIVE_START_DATE  StartDate,
MEM.EFFECTIVE_END_DATE EndDate,DECODE(NVL(FINANCEPOSTDONEFORADDITION,0),0,0,IMM.ADDPREMIUM) ADDPREMIUM,DECODE(NVL(FINANCEPOSTDONEFORDELETION,0),0,0,IMM.REFUNDPREMIUM) DeletePremium,
MEMP.TYPEE,MEMP.POLICYCODE,MEMP.MEMBERPOLICYCODE,Cat.Category_Name,
nvl(Mem.PARENTGROUPCODE,Mem.GROUP_CODE) GroupCode
FROM im_memberpolicy memP
  join im_memberS mem on MEMP.MEMBERCODE=MEM.MEMBER_CODE
  left join IM_MP_Premium IMM ON IMM.MEMBERPOLICYCODE = MEMP.MEMBERPOLICYCODE
 left  join im_categories  Cat on Cat.CATEGORY_CODE=MEMP.CATEGORYCODE
 where MEMP.TYPEE=ATypeCode and  MEMP.POLICYCODE=APolicyCode
 AND Nvl(ATPASource,0) = 0
 and (nvl(FINANCEPOSTDONEFORADDITION,1)+nvl(FINANCEPOSTDONEFORDELETION,1))<>2 -- and (memP.FINANCEPOSTDONEFORADDITION is not null or (select count(*) from IM_MEMPOLICYREFUNDPREMDTL DTL where memP.MEMBERPOLICYCODE=DTL.MEMBERPOLICYCODE)>0)-- or memP.FINANCEPOSTDONEFORDELETION is not null
 ) Pol
 where    (AddPremium+DeletePremium)<>0
 UNION
 select * from
(Select Nvl(MEM.CARDID,MEM.CARDNO),MEM.MEMBER_ID,
(MEM.FIRST_NAME||''||MEM.LAST_NAME) MemberName,
mem.EFFECTIVE_START_DATE  StartDate,
MEM.EFFECTIVE_END_DATE EndDate,DECODE(NVL(FINANCEPOSTDONEFORADDITION,0),0,0,IMM.ADDPREMIUM) ADDPREMIUM,DECODE(NVL(FINANCEPOSTDONEFORDELETION,0),0,0,IMM.REFUNDPREMIUM) DeletePremium,
MEMP.TYPEE,MEMP.POLICYCODE,MEMP.MEMBERPOLICYCODE,Cat.Category_Name,
nvl(Mem.PARENTGROUPCODE,Mem.GROUP_CODE) GroupCode
FROM im_memberpolicy memP
left join IM_MP_Premium IMM ON IMM.MEMBERPOLICYCODE = MEMP.MEMBERPOLICYCODE
  join im_reins_memberS mem on MEMP.REINSMEMBERCODE=MEM.MEMBER_CODE
 left  join im_categories  Cat on Cat.CATEGORY_CODE=MEM.CATEGORY_CODE
 where  MEMP.TYPEE=ATypeCode and  MEMP.POLICYCODE=APolicyCode
 AND (ACARDID IN (
SELECT FMCCARDNO FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE
IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE  Nvl(STATUS,0) = 0 AND SOURCETYPE = ATPASource
AND  NEXTCAREPRODHDRCODE = Decode(Nvl(ATPAProductionCode,0),0,NEXTCAREPRODHDRCODE,ATPAProductionCode))
UNION ALL
SELECT FMCCARDNO FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE
IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE Nvl(STATUS,0) = 0 AND SOURCETYPE = ATPASource AND TPAPRODHDRCODE = Decode(Nvl(ATPAProductionCode,0),0,TPAPRODHDRCODE,ATPAProductionCode))))
 and (nvl(FINANCEPOSTDONEFORADDITION,1)+nvl(FINANCEPOSTDONEFORDELETION,1))<>2 -- and (memP.FINANCEPOSTDONEFORADDITION is not null or (select count(*) from IM_MEMPOLICYREFUNDPREMDTL DTL where memP.MEMBERPOLICYCODE=DTL.MEMBERPOLICYCODE)>0)-- or memP.FINANCEPOSTDONEFORDELETION is not null
 ) Pol
 where    (AddPremium+DeletePremium)<>0
 ;

LOOP
FETCH LCUR INTO
TABLEDATA.CARDNO,
TABLEDATA.MEMBER_ID,
TABLEDATA.MemberName,
TABLEDATA.StartDate,
TABLEDATA.EndDate,
TABLEDATA.AddPremium,
TABLEDATA.DeletePremium,
TABLEDATA.TYPEE,
TABLEDATA.POLICYCODE,
TABLEDATA.MEMBERCODE,
TABLEDATA.categoryName,
TABLEDATA.GroupCode
 ;

EXIT WHEN LCUR%NOTFOUND;
PIPE ROW(TABLEDATA);
END LOOP;
CLOSE LCUR;

END FN_POLICYFINANCEPOSTING;
/

