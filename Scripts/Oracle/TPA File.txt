CREATE OR REPLACE PACKAGE av_tpaproductiondata_upload AS

  FUNCTION IM_TPACHECKMEMBEREXCEL_DATA(P_PRIMKEY NUMBER,P_RESULT OUT NUMBER) RETURN VARCHAR2;

  FUNCTION IM_TPAUPLOADMEMBER_DATA(P_PRIMKEY NUMBER,P_RESULT OUT NUMBER) RETURN VARCHAR2;

END AV_TPAPRODUCTIONDATA_UPLOAD;
/

CREATE OR REPLACE PACKAGE BODY av_tpaproductiondata_upload AS

FUNCTION IM_TPACHECKMEMBEREXCEL_DATA(P_PRIMKEY NUMBER,P_RESULT OUT NUMBER) RETURN VARCHAR2 AS
L_ERROR VARCHAR2(1000);
L_PRICE NUMBER;
L_COUNT NUMBER;
L_RECORDCOUNT NUMBER;
L_POLICYCOUNT NUMBER;
L_POLICYID NVARCHAR2(100);L_RESULT NUMBER;L_RULES NVARCHAR2(1000);
L_POLICYCODE NUMBER;L_CATEGORYCOUNT NUMBER;
L_POLICYCATEGORYCOUNT NUMBER;L_CATEGORYCODE NUMBER;
L_TREATYCOUNT NUMBER;L_BATCHNO NUMBER;
L_TOTALROWS NUMBER;L_MEMBERROWS NUMBER;
L_CARDCOUNT NUMBER;L_SUBGROUPCOUNT NUMBER;
BEGIN
L_RECORDCOUNT := 0;

DELETE FROM IM_EUT_TPA_PRODUCTION_TEMP;
COMMIT;
DELETE FROM IM_TPAPRODUCTIONDTL WHERE TPAPRODCUTIONHDR = P_PRIMKEY;
COMMIT;
INSERT INTO IM_EUT_TPA_PRODUCTION_TEMP SELECT * FROM IM_EUT_TPA_PRODUCTION;
COMMIT;
INSERT INTO IM_TPAPRODUCTIONDTL SELECT H.*,P_PRIMKEY FROM IM_EUT_TPA_PRODUCTION H;
COMMIT;
DELETE FROM  INSUPLOADERRORLOG WHERE  REFERENCEKEY = P_PRIMKEY;
COMMIT;
DELETE FROM IM_ADDEDMEMBERS  WHERE TPAPRODHDRCODE = P_PRIMKEY;
COMMIT;
DELETE FROM IM_MEMBERPOLICYPREMIUMDTL WHERE MEMBERPOLICYCODE IN
(SELECT MEMBERPOLICYCODE FROM IM_MEMBERPOLICY WHERE REINSADDMEMBERPOLICY IN
(SELECT REINSADDMEMBERDETCODE FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE
IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY)));
COMMIT;
DELETE FROM IM_MEMPOLICYREFUNDPREMDTL WHERE MEMBERPOLICYCODE IN
(SELECT MEMBERPOLICYCODE FROM IM_MEMBERPOLICY WHERE REINSADDMEMBERPOLICY IN
(SELECT REINSADDMEMBERDETCODE FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE
IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY)));
COMMIT;
DELETE FROM IM_MEMBERPOLICY WHERE REINSADDMEMBERPOLICY IN
(SELECT REINSADDMEMBERDETCODE FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE
IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY));
COMMIT;
UPDATE IM_MEMBERPOLICY SET REINSDELMEMBERPOLICY = NULL WHERE REINSDELMEMBERPOLICY IN
(SELECT REINSADDMEMBERDETCODE FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE
IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY));
COMMIT;
DELETE FROM IM_REINSDELMEMBERPREDETL WHERE REINSADDMEMBERDETCODE IN
(SELECT REINSADDMEMBERDETCODE FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE
IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY));
COMMIT; 
DELETE FROM IM_REINSADDMEMBERPREDETL WHERE REINSADDMEMBERDETCODE IN
(SELECT REINSADDMEMBERDETCODE FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE
IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY));
COMMIT;
DELETE FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE
IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY);
COMMIT;
DELETE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY;
COMMIT;
BEGIN
L_RULES:=IM_TPAUPLOADMEMBER_DATA(P_PRIMKEY,L_RESULT);
END;
IF L_RESULT = 2 THEN
DELETE FROM IM_ADDEDMEMBERS  WHERE TPAPRODHDRCODE = P_PRIMKEY;
COMMIT;
DELETE FROM IM_MEMBERPOLICYPREMIUMDTL WHERE MEMBERPOLICYCODE IN
(SELECT MEMBERPOLICYCODE FROM IM_MEMBERPOLICY WHERE REINSADDMEMBERPOLICY IN
(SELECT REINSADDMEMBERDETCODE FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE
IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY)));
COMMIT;
DELETE FROM IM_MEMPOLICYREFUNDPREMDTL WHERE MEMBERPOLICYCODE IN
(SELECT MEMBERPOLICYCODE FROM IM_MEMBERPOLICY WHERE REINSADDMEMBERPOLICY IN
(SELECT REINSADDMEMBERDETCODE FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE
IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY)));
COMMIT;
DELETE FROM IM_MEMBERPOLICY WHERE REINSADDMEMBERPOLICY IN
(SELECT REINSADDMEMBERDETCODE FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE
IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY));
COMMIT;
UPDATE IM_MEMBERPOLICY SET REINSDELMEMBERPOLICY = NULL WHERE REINSDELMEMBERPOLICY IN
(SELECT REINSADDMEMBERDETCODE FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE
IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY));
COMMIT;
DELETE FROM IM_REINSDELMEMBERPREDETL WHERE REINSADDMEMBERDETCODE IN
(SELECT REINSADDMEMBERDETCODE FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE
IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY));
COMMIT; 
DELETE FROM IM_REINSADDMEMBERPREDETL WHERE REINSADDMEMBERDETCODE IN
(SELECT REINSADDMEMBERDETCODE FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE
IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY));
COMMIT;
DELETE FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE
IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY);
COMMIT;
DELETE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY;
COMMIT;
COMMIT;
END IF;
P_RESULT := L_RESULT;
RETURN L_RULES;
EXCEPTION WHEN OTHERS THEN
P_RESULT := 2;
L_ERROR:= SQLERRM;
INSERT INTO INSUPLOADERRORLOG (MENUID,REFERENCEKEY,ERRORCODE,ERRORNAME,DESCRIPTION) VALUES
('ID_TPABATCHUPLOAD',P_PRIMKEY,'102','S.No :' || L_RECORDCOUNT ,L_ERROR);
COMMIT;
RETURN L_ERROR;
END;


FUNCTION IM_TPAUPLOADMEMBER_DATA(P_PRIMKEY NUMBER,P_RESULT OUT NUMBER) RETURN VARCHAR2 AS
L_ERROR VARCHAR2(1000);L_CALCMETHOD NUMBER;
L_POLICYID VARCHAR2(100);L_POLICYCODE NUMBER;L_POLICYNAME NVARCHAR2(500);L_GROUPCODE NUMBER;
L_ADDMEMBERPOLICYCODE NUMBER;L_ADDMEMBERSNO NUMBER;
L_STARTDATE DATE;L_ENDDATE DATE;L_MARITALSTATUS NUMBER;
L_MEMBERDETCODE NUMBER;L_MEMBERDETSNO NUMBER;
L_PREMIUMDETCODE NUMBER;L_PREMIUMDETSNO NUMBER;L_MEMPOLICYCOUNT NUMBER;
L_MEMBERID NUMBER;L_CATEGORYCODE NUMBER;L_CALCOUNT NUMBER;
L_MEMBERCODE NUMBER;L_MEMBERSNO NUMBER;L_SUBGROUPCODE NUMBER;
L_MEMBERPOLICYCODE NUMBER;L_MEMBERPOLICYSNO NUMBER;L_CARDCOUNT NUMBER;
L_MEMBERNAME VARCHAR2(1000);L_MEMBERCOUNT NUMBER;L_MEMCODE NUMBER;
L_GENDER NUMBER;L_MEMBERRELATION NUMBER;L_NATIONALITY NUMBER;L_RULES NVARCHAR2(500);
L_WORKLOCATION NUMBER;L_RESIDENTLOCATION NUMBER;L_ADDMEMBERPOLICYCOUNT NUMBER;
L_EMIRATE NUMBER;L_SALARYBAND NUMBER;L_TREATYCOUNT NUMBER;L_BROKERCOMMISSIONVALUE NUMBER;
L_COMMISSION NUMBER;L_ENTITYTYPE NUMBER;L_POLICYCATEGORYCOUNT NUMBER;L_OTHERCOMMISSIONVALUE NUMBER;
L_POLICYCOUNT NUMBER;L_SUBGROUPCOUNT NUMBER;L_CATEGORYCOUNT NUMBER;L_EXISTMEMBER NUMBER;
BEGIN

    DELETE FROM IM_TPAPRODUCTIONDTL_TEMP;
    COMMIT;
    INSERT INTO IM_TPAPRODUCTIONDTL_TEMP SELECT * FROM IM_TPAPRODUCTIONDTL;
    COMMIT;
    L_MEMBERID := 0;
    FOR TPADET IN(SELECT  * FROM IM_TPAPRODUCTIONDTL_TEMP WHERE TPAPRODCUTIONHDR = P_PRIMKEY AND CARD_NO NOT IN
    (SELECT CARDNO FROM IM_ADDEDMEMBERS WHERE TPAPRODHDRCODE = P_PRIMKEY)) LOOP
    
        IF  (Nvl(TPADET.ADDPREMIUM,0) <> 0 OR NVL(TPADET.REFUNDPREMIUM,0) <> 0) AND Nvl(TPADET.INPATIENT_PREMIUM,0) = 0 AND Nvl(TPADET.OUTPATIENT_PREMIUM,0) = 0 THEN
          INSERT INTO INSUPLOADERRORLOG (MENUID,REFERENCEKEY,ERRORCODE,ERRORNAME,DESCRIPTION) VALUES
          ('ID_TPABATCHUPLOAD',P_PRIMKEY,'102','S.No :' || L_MEMBERID,'InPatient Premium and OutPatient Premium is Zero. Please correct the Premium Amount.');
          COMMIT;
          P_RESULT := 2;
          RETURN 'InPatient Premium and OutPatient Premium is Zero. Please correct the Premium Amount.';
        END IF;

    END LOOP;  

     SELECT  Max(NGI_POLICY_NO) INTO L_POLICYCOUNT FROM IM_TPAPRODUCTIONDTL_TEMP WHERE TPAPRODCUTIONHDR = P_PRIMKEY AND CARD_NO NOT IN
    (SELECT CARDNO FROM IM_ADDEDMEMBERS WHERE TPAPRODHDRCODE = P_PRIMKEY) AND NGI_POLICY_NO NOT IN
    (SELECT POLICYID FROM IM_POLICY); 
    
    IF L_POLICYCOUNT <> 0 AND L_POLICYCOUNT IS NOT NULL THEN
      INSERT INTO INSUPLOADERRORLOG (MENUID,REFERENCEKEY,ERRORCODE,ERRORNAME,DESCRIPTION) VALUES
      ('ID_TPABATCHUPLOAD',P_PRIMKEY,'102','S.No :' || L_MEMBERID ,'Policy ID '||L_POLICYCOUNT||' Cannot be found in the System ! Please make sure the following policy ID is available in the system '|| L_POLICYID ||'.');
      COMMIT;
      P_RESULT := 2;
      RETURN 'Policy ID Cannot be found in the System ! Please make sure the following policy ID is available in the system '|| L_POLICYID ||'.';
    END IF;

    SELECT  Max(SUBGROUP) INTO L_SUBGROUPCOUNT FROM IM_TPAPRODUCTIONDTL_TEMP WHERE TPAPRODCUTIONHDR = P_PRIMKEY AND CARD_NO NOT IN
    (SELECT CARDNO FROM IM_ADDEDMEMBERS WHERE TPAPRODHDRCODE = P_PRIMKEY) AND Upper(Trim(SUBGROUP)) NOT IN
    (SELECT UPPER(TRIM(GROUP_NAME)) FROM IM_GROUPS) AND SUBGROUP IS NOT NULL AND SUBGROUP <> '0' ; 

    IF L_SUBGROUPCOUNT = 0 AND L_SUBGROUPCOUNT IS NOT NULL THEN
      INSERT INTO INSUPLOADERRORLOG (MENUID,REFERENCEKEY,ERRORCODE,ERRORNAME,DESCRIPTION) VALUES
      ('ID_TPABATCHUPLOAD',P_PRIMKEY,'102','S.No :' || L_MEMBERID ,'Sub Group '||L_SUBGROUPCOUNT||' does not exists in the system . Please check the subgroup name');
      COMMIT;
      P_RESULT := 2;
      RETURN 'Sub Group does not exists in the system .'||L_SUBGROUPCOUNT||' Please check the subgroup name.';
    END IF;
 
     SELECT  Max(CATEGORY) INTO L_CATEGORYCOUNT FROM IM_TPAPRODUCTIONDTL_TEMP WHERE TPAPRODCUTIONHDR = P_PRIMKEY AND CARD_NO NOT IN
    (SELECT CARDNO FROM IM_ADDEDMEMBERS WHERE TPAPRODHDRCODE = P_PRIMKEY) AND Upper(Trim(CATEGORY)) NOT IN
    (SELECT UPPER(TRIM(CATEGORY_ID)) FROM IM_CATEGORIES); 
                                    
    IF L_CATEGORYCOUNT = 0 AND L_CATEGORYCOUNT IS NOT NULL THEN
      INSERT INTO INSUPLOADERRORLOG (MENUID,REFERENCEKEY,ERRORCODE,ERRORNAME,DESCRIPTION) VALUES
      ('ID_TPABATCHUPLOAD',P_PRIMKEY,'102','S,No :' || L_MEMBERID,'Category '||L_CATEGORYCOUNT||' does not exists in the system . Please check the Category ID');
      COMMIT;
      P_RESULT := 2;
      RETURN 'Category does not exists in the system . Please check the Category ID.';  
    END IF;  
    
    FOR TPADET IN(SELECT  NGI_POLICY_NO FROM IM_TPAPRODUCTIONDTL_TEMP WHERE TPAPRODCUTIONHDR = P_PRIMKEY AND CARD_NO NOT IN
    (SELECT CARDNO FROM IM_ADDEDMEMBERS WHERE TPAPRODHDRCODE = P_PRIMKEY) GROUP BY NGI_POLICY_NO) LOOP
        L_POLICYID := TPADET.NGI_POLICY_NO;
        SELECT POLICYCODE,STARTDATE,ENDDATE INTO L_POLICYCODE,L_STARTDATE,L_ENDDATE FROM IM_POLICY WHERE POLICYID = L_POLICYID;
        SELECT Count(*) INTO L_ADDMEMBERPOLICYCOUNT FROM IM_REINS_ADDMEMBERPOLICY 
        WHERE POLICYCODE = L_POLICYCODE AND TPAPRODHDRCODE = P_PRIMKEY; 

        IF L_ADDMEMBERPOLICYCOUNT = 0 THEN
          SELECT Nvl(Max(REINSADDMEMBERPOLICYCODE),100000000000000000) + 1 INTO L_ADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY;
          SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_ADDMEMBERSNO FROM IM_REINS_ADDMEMBERPOLICY;
          INSERT INTO IM_REINS_ADDMEMBERPOLICY(TPAPRODHDRCODE,REINSADDMEMBERPOLICYCODE,SERIALNO,CREATEDON,CREATEDBY,LASTMODIFIEDON,LASTMODIFIEDBY,
          LEGALENTITYCODE,CUSTOMERCODE,COMPANYCODE,LOCATIONCODE,POLICYCODE,POLICYSTARTDDATE,POLICYENDDDATE,EFFECTIVEDATE,AUTHORIZEDSTATUS,SOURCETYPE)VALUES
          (P_PRIMKEY,L_ADDMEMBERPOLICYCODE,L_ADDMEMBERSNO,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,1,
          L_POLICYCODE,L_STARTDATE,L_ENDDATE,SYSDATE,1,1);
          COMMIT; 
        ELSE
          SELECT REINSADDMEMBERPOLICYCODE INTO L_ADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY 
          WHERE POLICYCODE = L_POLICYCODE AND TPAPRODHDRCODE = P_PRIMKEY;
        END IF;  

    END LOOP;         
    


    SELECT Nvl(Max(REINSADDMEMBERDETCODE),100000000000000000) + 1 INTO L_MEMBERDETCODE FROM IM_REINSADDMEMBERDET;
    SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_MEMBERDETSNO FROM IM_REINSADDMEMBERDET;

    
    INSERT INTO IM_REINSADDMEMBERDET
    SELECT L_MEMBERDETCODE+ROWNUM,L_ADDMEMBERPOLICYCODE,'DUBAI',1,SYSDATE,100000000000000002,SYSDATE,
    100000000000000002,100000000000000002,100000000000000002,'1',1,L_MEMBERDETSNO+ROWNUM,NULL,0,To_Date(TPADET.INCEPTION_DATE,'MM/DD/RRRR'),
    FIRST_NAME||' '||MIDDLE_NAME||' '||LAST_NAME,To_Date(TPADET.BIRTHDATE,'MM/DD/RRRR'),GEN1.CONSTANTVALUE,
    GEN2.CONSTANTVALUE,
    GEN3.CONSTANTVALUE,CAT.CATEGORY_CODE,GEN4.CONSTANTVALUE,To_Date(TPADET.INCEPTION_DATE,'MM/DD/RRRR'),
    0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,EMAILID,PASSPORT_NO,NULL,NULL,STAFF_NO,NULL,NULL,L_MEMBERID+ROWNUM,
    NULL,0,GEN7.PROVINCECODE,0,CARD_NO,NULL,0,NULL,NULL,0,0,0,GEN5.CONSTANTVALUE,
    GEN6.CONSTANTVALUE,GEN9.CONSTANTVALUE,GEN8.CONSTANTVALUE,UIDNUMBER,NULL,GEN10.CONSTANTVALUE,
    0,MIDDLE_NAME,LAST_NAME,CARD_NO,0,0,ENTITYNAME,1,Abs(ADDPREMIUM),Abs(REFUNDPREMIUM),Abs(INPATIENT_PREMIUM),
    Abs(OUTPATIENT_PREMIUM),Abs(TPA_FEES),Abs(COMMISSION),Abs(NGI_FEES) FROM  IM_TPAPRODUCTIONDTL_TEMP TPADET
    LEFT JOIN GENCONSTANT GEN1 ON Upper(GEN1.CONSTANTNAME) = Upper(GENDERNAME) AND GEN1.LANGUAGECODE = Upper('EN-US') AND GEN1.CATEGORY = 'Gender'
    LEFT JOIN GENCONSTANT GEN2 ON Upper(GEN2.CONSTANTNAME) = Decode(Upper(RELATION),'PRINCIPAL','SELF',Upper(RELATION)) AND GEN2.LANGUAGECODE = Upper('EN-US') AND GEN2.CATEGORY = 'MEMBERRELATION'
    LEFT JOIN GENCONSTANT GEN3 ON Upper(GEN3.CONSTANTNAME) = Upper(MARITALSTATUS) AND GEN3.LANGUAGECODE = Upper('EN-US') AND GEN3.CATEGORY = 'MARITAL_STATUS'
    LEFT JOIN GENCONSTANT GEN4 ON Upper(GEN4.CONSTANTNAME) = Upper(NATIONALITYNAME) AND GEN4.LANGUAGECODE = Upper('EN-US') AND GEN4.CATEGORY = 'FND_NATIONALITY'
    LEFT JOIN GENCONSTANT GEN5 ON Upper(GEN5.CONSTANTNAME) = Upper(WORKLOCATION) AND GEN5.LANGUAGECODE = Upper('EN-US') AND GEN5.CATEGORY = 'MEMBERLOCATION'
    LEFT JOIN GENCONSTANT GEN6 ON Upper(GEN6.CONSTANTNAME) = Upper(RESIDENTLOCATION) AND GEN6.LANGUAGECODE = Upper('EN-US') AND GEN6.CATEGORY = 'MEMBERLOCATION'
    LEFT JOIN GENPROVINCE GEN7 ON GEN7.PROVINCENAME = EMIRATENAME
    LEFT JOIN IM_CATEGORIES CAT ON UPPER(TRIM(CAT.CATEGORY_ID)) = Upper(Trim(CATEGORY))
    LEFT JOIN GENCONSTANT GEN8 ON Upper(GEN8.CONSTANTNAME) = Upper(SALARYBAND) AND GEN8.LANGUAGECODE = Upper('EN-US') AND GEN8.CATEGORY = 'SALARYBANDTYPE'
    LEFT JOIN GENCONSTANT GEN9 ON Upper(GEN9.CONSTANTNAME) = Upper(COMMISSIONTYPENAME) AND GEN9.LANGUAGECODE = Upper('EN-US') AND GEN9.CATEGORY = 'MEMYSENO'
    LEFT JOIN GENCONSTANT GEN10 ON Upper(GEN10.CONSTANTNAME) = Upper(ENTITYTYPE) AND GEN10.LANGUAGECODE = Upper('EN-US') AND GEN10.CATEGORY = 'ENTITYTYPE'
    WHERE TPAPRODCUTIONHDR = P_PRIMKEY AND CARD_NO NOT IN
   (SELECT CARDNO FROM IM_ADDEDMEMBERS WHERE TPAPRODHDRCODE = P_PRIMKEY);
    COMMIT;  

    DELETE FROM IM_REINSADDMEMBERPREDETL WHERE REINSADDMEMBERDETCODE IN
    (SELECT REINSADDMEMBERDETCODE FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE IN 
    (SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY));
    COMMIT;

    SELECT Nvl(Max(REINSADDPREMIUMCODE),100000000000000000) + 1 INTO L_PREMIUMDETCODE FROM IM_REINSADDMEMBERPREDETL;
    SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_PREMIUMDETSNO FROM IM_REINSADDMEMBERPREDETL;
    INSERT INTO IM_REINSADDMEMBERPREDETL
    SELECT L_PREMIUMDETCODE+ROWNUM,REINSADDMEMBERDETCODE,2,A_INPATIENT_PREMIUM,0,A_INPATIENT_PREMIUM,
    1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,
    L_PREMIUMDETSNO+ROWNUM,1,'INPATIENT SERVICE',10000000000000017,1,0 FROM IM_REINSADDMEMBERDET
    WHERE REINSADDMEMBERPOLICYCODE IN
    (SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY) 
    AND ADDPREMIUM <> 0;
    COMMIT;
    SELECT Nvl(Max(REINSADDPREMIUMCODE),100000000000000000) + 1 INTO L_PREMIUMDETCODE FROM IM_REINSADDMEMBERPREDETL;
    SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_PREMIUMDETSNO FROM IM_REINSADDMEMBERPREDETL;
    INSERT INTO IM_REINSADDMEMBERPREDETL
    SELECT L_PREMIUMDETCODE+ROWNUM,REINSADDMEMBERDETCODE,2,A_OUTPATIENT_PREMIUM,0,A_OUTPATIENT_PREMIUM,
    1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,
    L_PREMIUMDETSNO+ROWNUM,1,'OUTPATIENT SERVICE',10000000000000048,1,0 FROM IM_REINSADDMEMBERDET
    WHERE REINSADDMEMBERPOLICYCODE IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY) AND ADDPREMIUM <> 0;
    COMMIT;
    SELECT Nvl(Max(REINSADDPREMIUMCODE),100000000000000000) + 1 INTO L_PREMIUMDETCODE FROM IM_REINSADDMEMBERPREDETL;
    SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_PREMIUMDETSNO FROM IM_REINSADDMEMBERPREDETL;
    INSERT INTO IM_REINSADDMEMBERPREDETL
    SELECT L_PREMIUMDETCODE+ROWNUM,REINSADDMEMBERDETCODE,2,A_TPA_FEES,0,A_TPA_FEES,
    1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,
    L_PREMIUMDETSNO+ROWNUM,1,'COMISSION AND OTHERS',100000000000001356,1,0 FROM IM_REINSADDMEMBERDET
    WHERE REINSADDMEMBERPOLICYCODE IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY) AND ADDPREMIUM <> 0;
    COMMIT;
    SELECT Nvl(Max(REINSADDPREMIUMCODE),100000000000000000) + 1 INTO L_PREMIUMDETCODE FROM IM_REINSADDMEMBERPREDETL;
    SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_PREMIUMDETSNO FROM IM_REINSADDMEMBERPREDETL;
    INSERT INTO IM_REINSADDMEMBERPREDETL
    SELECT L_PREMIUMDETCODE+ROWNUM,REINSADDMEMBERDETCODE,2,A_COMMISSION,0,A_COMMISSION,
    1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,
    L_PREMIUMDETSNO+ROWNUM,1,'COMISSION AND OTHERS',100000000000001356,1,1 FROM IM_REINSADDMEMBERDET
    WHERE REINSADDMEMBERPOLICYCODE IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY) AND ADDPREMIUM <> 0;
    COMMIT;
    SELECT Nvl(Max(REINSADDPREMIUMCODE),100000000000000000) + 1 INTO L_PREMIUMDETCODE FROM IM_REINSADDMEMBERPREDETL;
    SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_PREMIUMDETSNO FROM IM_REINSADDMEMBERPREDETL;
    INSERT INTO IM_REINSADDMEMBERPREDETL
    SELECT L_PREMIUMDETCODE+ROWNUM,REINSADDMEMBERDETCODE,2,A_NGI_FEES,0,A_NGI_FEES,
    1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,
    L_PREMIUMDETSNO+ROWNUM,1,'NGI SPECIAL FEES',100000000000001496,1,2 FROM IM_REINSADDMEMBERDET
    WHERE REINSADDMEMBERPOLICYCODE IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY) AND ADDPREMIUM <> 0;
    COMMIT;

    DELETE FROM IM_REINSDELMEMBERPREDETL WHERE REINSDELPREMIUMCODE IN
    (SELECT REINSADDMEMBERDETCODE FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE IN 
    (SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY));
    COMMIT;

    SELECT Nvl(Max(REINSDELPREMIUMCODE),100000000000000000) + 1 INTO L_PREMIUMDETCODE FROM IM_REINSDELMEMBERPREDETL;
    SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_PREMIUMDETSNO FROM IM_REINSDELMEMBERPREDETL;  
    INSERT INTO IM_REINSDELMEMBERPREDETL
    SELECT L_PREMIUMDETCODE+ROWNUM,REINSADDMEMBERDETCODE,2,A_INPATIENT_PREMIUM,0,A_INPATIENT_PREMIUM,
    1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,
    L_PREMIUMDETSNO+ROWNUM,1,'INPATIENT SERVICE',10000000000000017,1,0 FROM IM_REINSADDMEMBERDET
    WHERE REINSADDMEMBERPOLICYCODE IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY) AND REFUNDPREMIUM <> 0;
    COMMIT;
    SELECT Nvl(Max(REINSDELPREMIUMCODE),100000000000000000) + 1 INTO L_PREMIUMDETCODE FROM IM_REINSDELMEMBERPREDETL;
    SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_PREMIUMDETSNO FROM IM_REINSDELMEMBERPREDETL; 
    INSERT INTO IM_REINSDELMEMBERPREDETL
    SELECT L_PREMIUMDETCODE+ROWNUM,REINSADDMEMBERDETCODE,2,A_OUTPATIENT_PREMIUM,0,A_OUTPATIENT_PREMIUM,
    1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,
    L_PREMIUMDETSNO+ROWNUM,1,'OUTPATIENT SERVICE',10000000000000048,1,0 FROM IM_REINSADDMEMBERDET
    WHERE REINSADDMEMBERPOLICYCODE IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY) AND REFUNDPREMIUM <> 0;
    COMMIT;
    SELECT Nvl(Max(REINSDELPREMIUMCODE),100000000000000000) + 1 INTO L_PREMIUMDETCODE FROM IM_REINSDELMEMBERPREDETL;
    SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_PREMIUMDETSNO FROM IM_REINSDELMEMBERPREDETL; 
    INSERT INTO IM_REINSDELMEMBERPREDETL
    SELECT L_PREMIUMDETCODE+ROWNUM,REINSADDMEMBERDETCODE,2,A_TPA_FEES,0,A_TPA_FEES,
    1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,
    L_PREMIUMDETSNO+ROWNUM,1,'COMISSION AND OTHERS',100000000000001356,1,0 FROM IM_REINSADDMEMBERDET
    WHERE REINSADDMEMBERPOLICYCODE IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY) AND REFUNDPREMIUM <> 0;
    COMMIT;
    SELECT Nvl(Max(REINSDELPREMIUMCODE),100000000000000000) + 1 INTO L_PREMIUMDETCODE FROM IM_REINSDELMEMBERPREDETL;
    SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_PREMIUMDETSNO FROM IM_REINSDELMEMBERPREDETL; 
    INSERT INTO IM_REINSDELMEMBERPREDETL
    SELECT L_PREMIUMDETCODE+ROWNUM,REINSADDMEMBERDETCODE,2,A_COMMISSION,0,A_COMMISSION,
    1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,
    L_PREMIUMDETSNO+ROWNUM,1,'COMISSION AND OTHERS',100000000000001356,1,1 FROM IM_REINSADDMEMBERDET
    WHERE REINSADDMEMBERPOLICYCODE IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY) AND REFUNDPREMIUM <> 0;
    COMMIT;
    SELECT Nvl(Max(REINSDELPREMIUMCODE),100000000000000000) + 1 INTO L_PREMIUMDETCODE FROM IM_REINSDELMEMBERPREDETL;
    SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_PREMIUMDETSNO FROM IM_REINSDELMEMBERPREDETL; 
    INSERT INTO IM_REINSDELMEMBERPREDETL
    SELECT L_PREMIUMDETCODE+ROWNUM,REINSADDMEMBERDETCODE,2,A_NGI_FEES,0,A_NGI_FEES,
    1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,
    L_PREMIUMDETSNO+ROWNUM,1,'NGI SPECIAL FEES',100000000000001496,1,2 FROM IM_REINSADDMEMBERDET
    WHERE REINSADDMEMBERPOLICYCODE IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY) AND REFUNDPREMIUM <> 0;
    COMMIT;  

    UPDATE IM_POLICY_COMMISSION SET CALC_METHOD = 0 WHERE POLICYCODE = L_POLICYCODE;
    COMMIT;

    INSERT INTO IM_REINS_MEMBERS(MEMBERPOLICYCODE,PARENTGROUPCODE,PARENT_ID,MEMBER_CODE,SERIALNO,FIRST_NAME,MIDDLENAME,LAST_NAME,GENDER,CATEGORY_CODE,GROUP_CODE,
    COVERED_FROM_DATE,COVERED_END_DATE,EFFECTIVE_START_DATE,EFFECTIVE_END_DATE,INCEPTION_DATE,
    APOLICYID,APOLICYNAME,POLICYCODE,CREATEDON,CREATEDBY,LASTMODIFIEDON,LASTMODIFIEDBY,
    LEGALENTITYCODE,CUSTOMERCODE,COMPANYCODE,LOCATIONCODE,CARDNO,CARDID,RESIDENTLOCATION,WORKLOCATION,
    SALARYBAND,ISCOMMISSION,EMIRATES_ID,UIDNUMBER,ENTITYTYPE,MEMBERENTITYIDNAME)VALUES
    (L_MEMBERPOLICYCODE,L_SUBGROUPCODE,L_SUBGROUPCODE,L_MEMBERCODE,L_MEMBERSNO,L_MEMBERNAME,TPADET.MIDDLE_NAME,TPADET.LAST_NAME,0,L_CATEGORYCODE,L_GROUPCODE,
    TO_DATE(TPADET.INCEPTION_DATE,'MM/DD/RRRR'),L_ENDDATE,TO_DATE(TPADET.INCEPTION_DATE,'MM/DD/RRRR'),L_ENDDATE,TO_DATE(TPADET.INCEPTION_DATE,'MM/DD/RRRR'),
    L_POLICYID,L_POLICYNAME,L_POLICYCODE,SYSDATE,100000000000000002,SYSDATE,100000000000000002,
    100000000000000002,100000000000000002,1,1,TPADET.CARD_NO,TPADET.CARD_NO,L_RESIDENTLOCATION,L_WORKLOCATION,
    L_SALARYBAND,L_COMMISSION,TPADET.EMIRATES_ID,TPADET.UIDNUMBER,L_ENTITYTYPE,TPADET.ENTITYNAME);
    COMMIT;

    SELECT  * FROM IM_TPAPRODUCTIONDTL_TEMP WHERE TPAPRODCUTIONHDR = P_PRIMKEY AND CARD_NO NOT IN
    (SELECT CARDNO FROM IM_ADDEDMEMBERS WHERE TPAPRODHDRCODE = P_PRIMKEY) AND CARD_NO NOT IN
    (SELECT CARDNO FROM IM_REINS_MEMBERS);

    FOR TPADET IN (SELECT  * FROM IM_TPAPRODUCTIONDTL_TEMP WHERE TPAPRODCUTIONHDR = P_PRIMKEY AND CARD_NO NOT IN
    (SELECT CARDNO FROM IM_ADDEDMEMBERS WHERE TPAPRODHDRCODE = P_PRIMKEY)) LOOP

      SELECT Nvl(Max(MEMBER_CODE),100000000000000000) + L_MEMBERID INTO L_MEMBERCODE FROM IM_REINS_MEMBERS;
      SELECT Nvl(Max(SERIALNO),0) + L_MEMBERID INTO L_MEMBERSNO FROM IM_REINS_MEMBERS;   

      SELECT CATEGORY_CODE INTO L_CATEGORYCODE FROM IM_CATEGORIES WHERE CATEGORY_ID = TPADET.CATEGORY;


      SELECT Count(*) INTO L_MEMBERCOUNT FROM  IM_REINS_MEMBERS WHERE CARDNO = TPADET.CARD_NO;

      IF L_MEMBERCOUNT = 0 THEN
          L_MEMBERNAME := TPADET.FIRST_NAME;
      ELSE
          SELECT MEMBER_CODE,FIRST_NAME INTO L_MEMCODE,L_MEMBERNAME FROM  IM_REINS_MEMBERS WHERE CARDNO = TPADET.CARD_NO;
          L_MEMBERCODE := L_MEMCODE;
      END IF;
      L_SUBGROUPCODE := NULL;
      IF L_SUBGROUPCOUNT <> 0 AND TPADET.SUBGROUP IS NOT NULL AND TPADET.SUBGROUP <> '0' THEN
        SELECT Max(GROUP_CODE) INTO L_SUBGROUPCODE FROM IM_GROUPS WHERE Upper(Trim(GROUP_NAME)) = Upper(Trim(TPADET.SUBGROUP));
      END IF;

      IF L_SUBGROUPCODE = 0 THEN
        L_SUBGROUPCODE := NULL;
      END IF;

      SELECT Count(*) INTO L_MEMPOLICYCOUNT FROM IM_MEMBERPOLICY WHERE ACARDID = TPADET.CARD_NO AND POLICYCODE = L_POLICYCODE;

      IF L_MEMBERCOUNT <> 0 THEN
        UPDATE IM_REINS_MEMBERS SET PARENTGROUPCODE = L_SUBGROUPCODE WHERE MEMBER_CODE = L_MEMBERCODE;
        COMMIT;
      END IF;
      IF L_MEMPOLICYCOUNT = 0 THEN
        INSERT INTO IM_MEMBERPOLICY(MEMBERPOLICYCODE,SERIALNO,REINSMEMBERCODE,POLICYCODE,MEMBERSTARTDATE,MEMBERENDDATE,
        POLICYSTARTDDATE,POLICYENDDDATE,CATEGORYCODE,FINANCEPOSTDONEFORADDITION,FINANCEPOSTDONEFORDELETION,REINSADDMEMBERPOLICY,
        REINSDELMEMBERPOLICY,AGENDER,AMEMBERNAME,GROUPCODE,CREATEDON,CREATEDBY,LASTMODIFIEDON,LASTMODIFIEDBY,
        LEGALENTITYCODE,CUSTOMERCODE,COMPANYCODE,LOCATIONCODE,ACARDID,A_CARDID,TYPEE,A_SUBGROUPCODE)VALUES
        ((SELECT Nvl(Max(MEMBERPOLICYCODE),100000000000000000) + 1 FROM IM_MEMBERPOLICY),
        (SELECT Nvl(Max(SERIALNO),0) + 1 FROM IM_MEMBERPOLICY),L_MEMBERCODE,L_POLICYCODE,TO_DATE(TPADET.INCEPTION_DATE,'MM/DD/RRRR'),NULL,L_STARTDATE,
        L_ENDDATE,L_CATEGORYCODE,0,0,L_MEMBERDETCODE,NULL,0,L_MEMBERNAME,L_GROUPCODE,SYSDATE,100000000000000002,
        SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,1,TPADET.CARD_NO,TPADET.CARD_NO,1,L_SUBGROUPCODE);
        COMMIT;

        SELECT MEMBERPOLICYCODE INTO L_MEMBERPOLICYCODE FROM IM_MEMBERPOLICY  WHERE ACARDID = TPADET.CARD_NO AND POLICYCODE = L_POLICYCODE;

        IF L_MEMBERCOUNT = 0 THEN
          INSERT INTO IM_REINS_MEMBERS(MEMBERPOLICYCODE,PARENTGROUPCODE,PARENT_ID,MEMBER_CODE,SERIALNO,FIRST_NAME,MIDDLENAME,LAST_NAME,GENDER,CATEGORY_CODE,GROUP_CODE,
          COVERED_FROM_DATE,COVERED_END_DATE,EFFECTIVE_START_DATE,EFFECTIVE_END_DATE,INCEPTION_DATE,
          APOLICYID,APOLICYNAME,POLICYCODE,CREATEDON,CREATEDBY,LASTMODIFIEDON,LASTMODIFIEDBY,
          LEGALENTITYCODE,CUSTOMERCODE,COMPANYCODE,LOCATIONCODE,CARDNO,CARDID,RESIDENTLOCATION,WORKLOCATION,
          SALARYBAND,ISCOMMISSION,EMIRATES_ID,UIDNUMBER,ENTITYTYPE,MEMBERENTITYIDNAME)VALUES
          (L_MEMBERPOLICYCODE,L_SUBGROUPCODE,L_SUBGROUPCODE,L_MEMBERCODE,L_MEMBERSNO,L_MEMBERNAME,TPADET.MIDDLE_NAME,TPADET.LAST_NAME,0,L_CATEGORYCODE,L_GROUPCODE,
          TO_DATE(TPADET.INCEPTION_DATE,'MM/DD/RRRR'),L_ENDDATE,TO_DATE(TPADET.INCEPTION_DATE,'MM/DD/RRRR'),L_ENDDATE,TO_DATE(TPADET.INCEPTION_DATE,'MM/DD/RRRR'),
          L_POLICYID,L_POLICYNAME,L_POLICYCODE,SYSDATE,100000000000000002,SYSDATE,100000000000000002,
          100000000000000002,100000000000000002,1,1,TPADET.CARD_NO,TPADET.CARD_NO,L_RESIDENTLOCATION,L_WORKLOCATION,
          L_SALARYBAND,L_COMMISSION,TPADET.EMIRATES_ID,TPADET.UIDNUMBER,L_ENTITYTYPE,TPADET.ENTITYNAME);
          COMMIT;
        ELSE
          UPDATE IM_REINS_MEMBERS SET MEMBERPOLICYCODE= L_MEMBERPOLICYCODE WHERE MEMBER_CODE = L_MEMBERCODE;
          COMMIT;
        END IF; 
      ELSE
        SELECT Count(*) INTO L_EXISTMEMBER FROM IM_MEMBERPOLICY WHERE ACARDID = TPADET.CARD_NO AND POLICYCODE = L_POLICYCODE AND (REINSADDMEMBERPOLICY IS NOT NULL OR Nvl(FINANCEPOSTDONEFORADDITION,0) = 1);

        IF L_EXISTMEMBER > 0 AND  TPADET.ADDPREMIUM <> 0 THEN
            INSERT INTO INSUPLOADERRORLOG (MENUID,REFERENCEKEY,ERRORCODE,ERRORNAME,DESCRIPTION) VALUES
            ('ID_TPABATCHUPLOAD',P_PRIMKEY,'102','S.No :' || L_MEMBERID ,'Card No. '||Upper(TPADET.CARD_NO)||' Already added in the Previous Batches  !');
            COMMIT;
            P_RESULT := 2;
            RETURN 'Card No. '||Upper(TPADET.CARD_NO)||' Already added in the Previous Batches  !';
        ELSE
            SELECT Count(*) INTO L_EXISTMEMBER FROM IM_MEMBERPOLICY WHERE ACARDID = TPADET.CARD_NO AND POLICYCODE = L_POLICYCODE AND (REINSDELMEMBERPOLICY IS NOT NULL OR Nvl(FINANCEPOSTDONEFORDELETION,0) = 1);

            IF L_EXISTMEMBER > 0 AND  TPADET.REFUNDPREMIUM <> 0 THEN
                INSERT INTO INSUPLOADERRORLOG (MENUID,REFERENCEKEY,ERRORCODE,ERRORNAME,DESCRIPTION) VALUES
                ('ID_TPABATCHUPLOAD',P_PRIMKEY,'102','S.No :' || L_MEMBERID ,'Card No. '||Upper(TPADET.CARD_NO)||' Already deleted in the Previous Batches  !');
                COMMIT;
                P_RESULT := 2;
                RETURN 'Card No. '||Upper(TPADET.CARD_NO)||' Already deleted in the Previous Batches  !';
            END IF;
        END IF;

        SELECT MEMBERPOLICYCODE INTO L_MEMBERPOLICYCODE FROM IM_MEMBERPOLICY WHERE ACARDID = TPADET.CARD_NO AND POLICYCODE = L_POLICYCODE;
        IF TPADET.REFUNDPREMIUM <> 0 THEN
            UPDATE IM_REINS_MEMBERS SET COVERED_END_DATE = TO_DATE(TPADET.INCEPTION_DATE,'MM/DD/RRRR'),EFFECTIVE_END_DATE = TO_DATE(TPADET.INCEPTION_DATE,'MM/DD/RRRR')
            WHERE MEMBER_CODE = L_MEMBERCODE;
            COMMIT;
            UPDATE IM_MEMBERPOLICY  SET MEMBERENDDATE = TO_DATE(TPADET.INCEPTION_DATE,'MM/DD/RRRR'),REINSDELMEMBERPOLICY = L_MEMBERDETCODE WHERE REINSMEMBERCODE = L_MEMBERCODE;
            COMMIT;
            DELETE FROM IM_MEMPOLICYREFUNDPREMDTL WHERE MEMBERPOLICYCODE = L_MEMBERPOLICYCODE;
            COMMIT;  
        END IF;
      END IF;

      DELETE FROM IM_MEMBERPOLICYPREMIUMDTL WHERE MEMBERPOLICYCODE IN
      (SELECT MEMBERPOLICYCODE FROM IM_MEMBERPOLICY WHERE REINSADDMEMBERPOLICY IN 
      (SELECT REINSADDMEMBERDETCODE FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE IN 
      (SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY)));
      COMMIT;

      SELECT Nvl(Max(MEMBERPOLICYPREMIUMDTLCODE),100000000000000000) + 1 INTO L_PREMIUMDETCODE FROM IM_MEMBERPOLICYPREMIUMDTL;
      SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_PREMIUMDETSNO FROM IM_MEMBERPOLICYPREMIUMDTL;
      INSERT INTO IM_MEMBERPOLICYPREMIUMDTL
      SELECT L_PREMIUMDETCODE+ROWNUM,MPOL.MEMBERPOLICYCODE,2,A_INPATIENT_PREMIUM,0,A_INPATIENT_PREMIUM,
      1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,
      L_PREMIUMDETSNO+ROWNUM,1,'INPATIENT SERVICE',10000000000000017,0 FROM IM_MEMBERPOLICY MPOL
      LEFT JOIN IM_REINSADDMEMBERDET REINS ON REINS.REINSADDMEMBERDETCODE = MPOL.REINSADDMEMBERPOLICY
      WHERE REINSADDMEMBERPOLICYCODE IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY) AND ADDPREMIUM <> 0;
      COMMIT;
      SELECT Nvl(Max(MEMBERPOLICYPREMIUMDTLCODE),100000000000000000) + 1 INTO L_PREMIUMDETCODE FROM IM_MEMBERPOLICYPREMIUMDTL;
      SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_PREMIUMDETSNO FROM IM_MEMBERPOLICYPREMIUMDTL;
      INSERT INTO IM_MEMBERPOLICYPREMIUMDTL
      SELECT L_PREMIUMDETCODE+ROWNUM,MPOL.MEMBERPOLICYCODE,2,A_OUTPATIENT_PREMIUM,0,A_OUTPATIENT_PREMIUM,
      1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,
      L_PREMIUMDETSNO+ROWNUM,1,'OUTPATIENT SERVICE',10000000000000048,0 FROM IM_MEMBERPOLICY MPOL
      LEFT JOIN IM_REINSADDMEMBERDET REINS ON REINS.REINSADDMEMBERDETCODE = MPOL.REINSADDMEMBERPOLICY
      WHERE REINSADDMEMBERPOLICYCODE IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY) AND ADDPREMIUM <> 0;
      COMMIT;
      SELECT Nvl(Max(MEMBERPOLICYPREMIUMDTLCODE),100000000000000000) + 1 INTO L_PREMIUMDETCODE FROM IM_MEMBERPOLICYPREMIUMDTL;
      SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_PREMIUMDETSNO FROM IM_MEMBERPOLICYPREMIUMDTL;
      INSERT INTO IM_MEMBERPOLICYPREMIUMDTL
      SELECT L_PREMIUMDETCODE+ROWNUM,MPOL.MEMBERPOLICYCODE,2,A_TPA_FEES,0,A_TPA_FEES,
      1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,
      L_PREMIUMDETSNO+ROWNUM,1,'COMISSION AND OTHERS',100000000000001356,0 FROM IM_MEMBERPOLICY MPOL
      LEFT JOIN IM_REINSADDMEMBERDET REINS ON REINS.REINSADDMEMBERDETCODE = MPOL.REINSADDMEMBERPOLICY
      WHERE REINSADDMEMBERPOLICYCODE IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY) AND ADDPREMIUM <> 0;
      COMMIT;
      SELECT Nvl(Max(MEMBERPOLICYPREMIUMDTLCODE),100000000000000000) + 1 INTO L_PREMIUMDETCODE FROM IM_MEMBERPOLICYPREMIUMDTL;
      SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_PREMIUMDETSNO FROM IM_MEMBERPOLICYPREMIUMDTL;
      INSERT INTO IM_MEMBERPOLICYPREMIUMDTL
      SELECT L_PREMIUMDETCODE+ROWNUM,MPOL.MEMBERPOLICYCODE,2,A_COMMISSION,0,A_COMMISSION,
      1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,
      L_PREMIUMDETSNO+ROWNUM,1,'COMISSION AND OTHERS',100000000000001356,1 FROM IM_MEMBERPOLICY MPOL
      LEFT JOIN IM_REINSADDMEMBERDET REINS ON REINS.REINSADDMEMBERDETCODE = MPOL.REINSADDMEMBERPOLICY
      WHERE REINSADDMEMBERPOLICYCODE IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY) AND ADDPREMIUM <> 0;
      COMMIT;
      SELECT Nvl(Max(MEMBERPOLICYPREMIUMDTLCODE),100000000000000000) + 1 INTO L_PREMIUMDETCODE FROM IM_MEMBERPOLICYPREMIUMDTL;
      SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_PREMIUMDETSNO FROM IM_MEMBERPOLICYPREMIUMDTL;
      INSERT INTO IM_MEMBERPOLICYPREMIUMDTL
      SELECT L_PREMIUMDETCODE+ROWNUM,MPOL.MEMBERPOLICYCODE,2,A_NGI_FEES,0,A_NGI_FEES,
      1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,
      L_PREMIUMDETSNO+ROWNUM,1,'NGI SPECIAL FEES',100000000000001496,2 FROM IM_MEMBERPOLICY MPOL
      LEFT JOIN IM_REINSADDMEMBERDET REINS ON REINS.REINSADDMEMBERDETCODE = MPOL.REINSADDMEMBERPOLICY
      WHERE REINSADDMEMBERPOLICYCODE IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY) AND ADDPREMIUM <> 0;
      COMMIT;

      DELETE FROM IM_MEMPOLICYREFUNDPREMDTL WHERE MEMBERPOLICYCODE IN
      (SELECT MEMBERPOLICYCODE FROM IM_MEMBERPOLICY WHERE REINSDELMEMBERPOLICY IN 
      (SELECT REINSADDMEMBERDETCODE FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE IN 
      (SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY)));
      COMMIT;

      SELECT Nvl(Max(MEMPOLICYREFUNDPREMIUMDTLCODE),100000000000000000) + 1 INTO L_PREMIUMDETCODE FROM IM_MEMPOLICYREFUNDPREMDTL;
      SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_PREMIUMDETSNO FROM IM_MEMPOLICYREFUNDPREMDTL;
      INSERT INTO IM_MEMPOLICYREFUNDPREMDTL
      SELECT L_PREMIUMDETCODE+ROWNUM,MPOL.MEMBERPOLICYCODE,2,A_INPATIENT_PREMIUM,0,A_INPATIENT_PREMIUM,
      1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,
      L_PREMIUMDETSNO+ROWNUM,1,'INPATIENT SERVICE',10000000000000017,0,0 FROM IM_MEMBERPOLICY MPOL
      LEFT JOIN IM_REINSADDMEMBERDET REINS ON REINS.REINSADDMEMBERDETCODE = MPOL.REINSDELMEMBERPOLICY
      WHERE REINSADDMEMBERPOLICYCODE IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY) AND ADDPREMIUM <> 0;
      COMMIT;
      SELECT Nvl(Max(MEMPOLICYREFUNDPREMIUMDTLCODE),100000000000000000) + 1 INTO L_PREMIUMDETCODE FROM IM_MEMPOLICYREFUNDPREMDTL;
      SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_PREMIUMDETSNO FROM IM_MEMPOLICYREFUNDPREMDTL;
      INSERT INTO IM_MEMPOLICYREFUNDPREMDTL
      SELECT L_PREMIUMDETCODE+ROWNUM,MPOL.MEMBERPOLICYCODE,2,A_OUTPATIENT_PREMIUM,0,A_OUTPATIENT_PREMIUM,
      1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,
      L_PREMIUMDETSNO+ROWNUM,1,'OUTPATIENT SERVICE',10000000000000048,0,0 FROM IM_MEMBERPOLICY MPOL
      LEFT JOIN IM_REINSADDMEMBERDET REINS ON REINS.REINSADDMEMBERDETCODE = MPOL.REINSDELMEMBERPOLICY
      WHERE REINSADDMEMBERPOLICYCODE IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY) AND ADDPREMIUM <> 0;
      COMMIT;
      SELECT Nvl(Max(MEMPOLICYREFUNDPREMIUMDTLCODE),100000000000000000) + 1 INTO L_PREMIUMDETCODE FROM IM_MEMPOLICYREFUNDPREMDTL;
      SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_PREMIUMDETSNO FROM IM_MEMPOLICYREFUNDPREMDTL;
      INSERT INTO IM_MEMPOLICYREFUNDPREMDTL
      SELECT L_PREMIUMDETCODE+ROWNUM,MPOL.MEMBERPOLICYCODE,2,A_TPA_FEES,0,A_TPA_FEES,
      1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,
      L_PREMIUMDETSNO+ROWNUM,1,'COMISSION AND OTHERS',100000000000001356,0,0 FROM IM_MEMBERPOLICY MPOL
      LEFT JOIN IM_REINSADDMEMBERDET REINS ON REINS.REINSADDMEMBERDETCODE = MPOL.REINSDELMEMBERPOLICY
      WHERE REINSADDMEMBERPOLICYCODE IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY) AND ADDPREMIUM <> 0;
      COMMIT;
      SELECT Nvl(Max(MEMPOLICYREFUNDPREMIUMDTLCODE),100000000000000000) + 1 INTO L_PREMIUMDETCODE FROM IM_MEMPOLICYREFUNDPREMDTL;
      SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_PREMIUMDETSNO FROM IM_MEMPOLICYREFUNDPREMDTL;
      INSERT INTO IM_MEMPOLICYREFUNDPREMDTL
      SELECT L_PREMIUMDETCODE+ROWNUM,MPOL.MEMBERPOLICYCODE,2,A_COMMISSION,0,A_COMMISSION,
      1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,
      L_PREMIUMDETSNO+ROWNUM,1,'COMISSION AND OTHERS',100000000000001356,0,1 FROM IM_MEMBERPOLICY MPOL
      LEFT JOIN IM_REINSADDMEMBERDET REINS ON REINS.REINSADDMEMBERDETCODE = MPOL.REINSDELMEMBERPOLICY
      WHERE REINSADDMEMBERPOLICYCODE IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY) AND ADDPREMIUM <> 0;
      COMMIT;
      SELECT Nvl(Max(MEMPOLICYREFUNDPREMIUMDTLCODE),100000000000000000) + 1 INTO L_PREMIUMDETCODE FROM IM_MEMPOLICYREFUNDPREMDTL;
      SELECT Nvl(Max(SERIALNO),0) + 1 INTO L_PREMIUMDETSNO FROM IM_MEMPOLICYREFUNDPREMDTL;
      INSERT INTO IM_MEMPOLICYREFUNDPREMDTL
      SELECT L_PREMIUMDETCODE+ROWNUM,MPOL.MEMBERPOLICYCODE,2,A_NGI_FEES,0,A_NGI_FEES,
      1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,100000000000000002,100000000000000002,1,
      L_PREMIUMDETSNO+ROWNUM,1,'NGI SPECIAL FEES',100000000000001496,0,2 FROM IM_MEMBERPOLICY MPOL
      LEFT JOIN IM_REINSADDMEMBERDET REINS ON REINS.REINSADDMEMBERDETCODE = MPOL.REINSDELMEMBERPOLICY
      WHERE REINSADDMEMBERPOLICYCODE IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY) AND ADDPREMIUM <> 0;
      COMMIT;
      INSERT INTO IM_ADDEDMEMBERS(CARDNO,TPAPRODHDRCODE,NEXTCAREPRODHDRCODE) VALUES (TPADET.CARD_NO,P_PRIMKEY,NULL);
      COMMIT;

    END LOOP;   

AV_GETMAX_REC('IM_MEMBERPOLICY','SERIALNO');
L_RULES:=UPDATETPASUBGROUP(P_PRIMKEY);
P_RESULT := 1;
RETURN 'OK';
EXCEPTION WHEN OTHERS THEN
P_RESULT := 2;
L_ERROR:= SQLERRM;
IF UPPER(L_ERROR) = 'ORA-00001: UNIQUE CONSTRAINT (ADDVANTAGE_LIVE.IM_MEMBERPOLICY_INDXPK) VIOLATED' THEN
DELETE FROM IM_REINSADDMEMBERPREDETL WHERE REINSADDMEMBERDETCODE IN
(SELECT REINSADDMEMBERDETCODE FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE
IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY)
AND FMCCARDNO NOT IN(SELECT CARDNO FROM IM_ADDEDMEMBERS WHERE TPAPRODHDRCODE = P_PRIMKEY));
COMMIT;
DELETE FROM IM_REINSADDMEMBERDET WHERE REINSADDMEMBERPOLICYCODE
IN(SELECT REINSADDMEMBERPOLICYCODE FROM IM_REINS_ADDMEMBERPOLICY WHERE TPAPRODHDRCODE = P_PRIMKEY)
AND FMCCARDNO NOT IN(SELECT CARDNO FROM IM_ADDEDMEMBERS WHERE TPAPRODHDRCODE = P_PRIMKEY);
COMMIT;
L_ERROR:=av_tpaproductiondata_upload.IM_TPAUPLOADMEMBER_DATA(P_PRIMKEY,P_RESULT);
ELSE
RETURN L_ERROR;
END IF;
RETURN L_ERROR;
END;
END AV_TPAPRODUCTIONDATA_UPLOAD;
/

