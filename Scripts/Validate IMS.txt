UPDATE IM_NGI_JV_INSTALLMENT SET RECEIVEDAMOUNT = Abs(RECEIVEDAMOUNT) WHERE   RECEIVEDAMOUNT < 0;
UPDATE IM_NGI_JV_INSTALLMENT SET VATRECEIVEDAMOUNT = Abs(VATRECEIVEDAMOUNT) WHERE   VATRECEIVEDAMOUNT < 0;
UPDATE IM_NGI_JV_INSTALLMENT SET AMOUNT = Abs(AMOUNT) WHERE   AMOUNT < 0;
UPDATE IM_NGI_JV_INSTALLMENT SET VATAMOUNT = Abs(VATAMOUNT) WHERE   VATAMOUNT < 0;
COMMIT;

UPDATE IM_NGI_JV_INSTALLMENT SET RECEIVEDAMOUNT = Abs(RECEIVEDAMOUNT) WHERE   RECEIVEDAMOUNT > 0;
UPDATE IM_NGI_JV_INSTALLMENT SET VATRECEIVEDAMOUNT = Abs(VATRECEIVEDAMOUNT) WHERE   VATRECEIVEDAMOUNT > 0;
UPDATE IM_NGI_JV_INSTALLMENT SET AMOUNT = Abs(AMOUNT) WHERE   AMOUNT > 0;
UPDATE IM_NGI_JV_INSTALLMENT SET VATAMOUNT = Abs(VATAMOUNT) WHERE   VATAMOUNT > 0;
COMMIT;

UPDATE IM_NGI_JV_INSTALLMENT SET RECEIVEDAMOUNT = 0 WHERE  RECEIVEDAMOUNT IS NULL;
UPDATE IM_NGI_JV_INSTALLMENT SET VATRECEIVEDAMOUNT = 0 WHERE   VATRECEIVEDAMOUNT IS NULL;
UPDATE IM_NGI_JV_INSTALLMENT SET AMOUNT = 0 WHERE   AMOUNT  IS NULL;
UPDATE IM_NGI_JV_INSTALLMENT SET VATAMOUNT = 0 WHERE   VATAMOUNT IS NULL;
COMMIT;


BEGIN
FOR HDR IN(SELECT * FROM (SELECT  JV.SERIALNO,JVI.REF_NO,Abs(TOTALLC)TOTALLC,Abs(PAIDAMOUNT) PAIDAMOUNT,
TOTALAMOUNT,TOTALPAIDAMOUNT FROM IMS_RETRIEVEDATA JV
JOIN IM_NGI_JV_INS JVI ON JVI.REF_NO =  JV.SERIALNO ) 
WHERE NVL(TOTALLC,0) <> NVL(TOTALAMOUNT,0))  LOOP

UPDATE IM_NGI_JV_INSTALLMENT SET VATAMOUNT = HDR.TOTALLC-HDR.TOTALAMOUNT WHERE INSTALLMENTNO = 1 AND  REF_NO = HDR.REF_NO;
COMMIT; 

END LOOP;
END;


BEGIN
FOR HDR IN(SELECT * FROM (SELECT  JV.SERIALNO,JVI.REF_NO,Abs(TOTALLC)TOTALLC,Abs(PAIDAMOUNT) PAIDAMOUNT,
TOTALAMOUNT,TOTALPAIDAMOUNT FROM IMS_RETRIEVEDATA JV
JOIN IM_NGI_JV_INS JVI ON JVI.REF_NO =  JV.SERIALNO ) 
WHERE NVL(PAIDAMOUNT,0) <> NVL(TOTALPAIDAMOUNT,0))  LOOP

UPDATE IM_NGI_JV_INSTALLMENT SET VATAMOUNT = HDR.TOTALLC-HDR.TOTALAMOUNT WHERE INSTALLMENTNO = 1 AND  REF_NO = HDR.REF_NO;
COMMIT; 

END LOOP;
END;


DECLARE
L_RPTPK NUMBER;
L_NETTOTAL NUMBER;
L_ERROR NVARCHAR2(1000);
L_IPPERCENTAGE NUMBER;
L_OPPERCENTAGE NUMBER;
L_OTHERPERCENTAGE NUMBER;
L_TPAPERCENTAGE NUMBER;
L_COMPERCENTAGE NUMBER;
L_DUEDAYS NUMBER;
L_IMSTOTAL NUMBER;
L_RULES VARCHAR2(1000);
L_DOCCOUNT NUMBER;
BEGIN  
      

FOR HDR IN (SELECT * FROM IMS_RETRIEVEDATA WHERE SERIALNO IN
(SELECT SERIALNO FROM (SELECT  JV.SERIALNO,JVI.REF_NO,MAX(NVL(Abs(JV.TOTALLC),0)) JAMT,
Max(NVL(Abs(JV.PAIDAMOUNT),0)) JPAMT,
SUM(NVL(JVI.AMOUNT,0)+Nvl(JVI.VATAMOUNT,0)) JIAMT,
Sum(NVL(RECEIVEDAMOUNT,0)+Nvl(VATRECEIVEDAMOUNT,0)) JIPAMT FROM IMS_RETRIEVEDATA JV
JOIN IM_NGI_JV_INSTALLMENT JVI ON JVI.REF_NO =  JV.SERIALNO
GROUP BY  JVI.REF_NO,JV.SERIALNO) WHERE NVL(JIPAMT,0) <> NVL(JPAMT,0))) LOOP
    L_NETTOTAL := HDR.PAIDAMOUNT;
    L_IMSTOTAL := HDR.PAIDAMOUNT;
    FOR JINS IN (SELECT * FROM IM_NGI_JV_INSTALLMENT WHERE REF_NO =  HDR.SERIALNO  ORDER BY INSTALLMENTNO,INSTALLMENTDATE ASC) LOOP



          IF L_NETTOTAL >=  (JINS.AMOUNT+JINS.VATAMOUNT) THEN
            UPDATE IM_NGI_JV_INSTALLMENT SET RECEIVEDAMOUNT = JINS.AMOUNT,VATRECEIVEDAMOUNT=JINS.VATAMOUNT,
            PAIDIPPREMIUM = ADDIPPREMIUM,PAIDOPPREMIUM = ADDOPPREMIUM,
            PAIDOTHERPREMIUM = ADDOTHERPREMIUM WHERE JVINSTALLMENTCODE = JINS.JVINSTALLMENTCODE;
            COMMIT;
            L_NETTOTAL := L_NETTOTAL - (JINS.AMOUNT+JINS.VATAMOUNT);
          ELSIF L_NETTOTAL < (JINS.AMOUNT+JINS.VATAMOUNT) THEN
              
              UPDATE IM_NGI_JV_INSTALLMENT SET RECEIVEDAMOUNT = L_NETTOTAL,VATRECEIVEDAMOUNT=0,PAIDIPPREMIUM = (L_NETTOTAL/100) * L_IPPERCENTAGE,
              PAIDOPPREMIUM = (L_NETTOTAL/100) * L_OPPERCENTAGE,
              PAIDOTHERPREMIUM = (L_NETTOTAL/100) * L_OTHERPERCENTAGE,
              TPAPAYABLE = (L_NETTOTAL/100) * L_TPAPERCENTAGE,
              COMMISSIONPAYABLE = (L_NETTOTAL/100) * L_COMPERCENTAGE WHERE JVINSTALLMENTCODE = JINS.JVINSTALLMENTCODE;
              COMMIT;
              L_NETTOTAL := 0;
          END IF;

    END LOOP;

END LOOP;
END;







   SELECT * FROM IM_OS_IIRIS_VW WHERE JRNL_CODE='0117167022'