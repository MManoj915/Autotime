DECLARE
L_MEMBERCODE NUMBER;
L_PBMCOUNT NUMBER;
L_CLAIMCOUNT NUMBER;
L_PROVIDERCODE NUMBER;
L_ERROR VARCHAR2(1000);
ASEQNAME VARCHAR2(1000);
L_TARIFFPRICE NUMBER;
L_INVCOUNT NUMBER;
L_CLINICIAN NUMBER;
L_ACTIVITYSTATUS NUMBER;
L_CLAIMSNO NUMBER;
L_CLAIMCODE NUMBER;
L_ACTIVITYSNO NUMBER;
L_ACTIVITYCODE NUMBER;
L_OBSERVATIONSNO NUMBER;
L_OBSERVATIONCODE NUMBER;
L_POLICYCODE NUMBER;
L_MEMBERPOLICYCODE NUMBER;
L_CATEGORYCODE  NUMBER;
L_CARDNO VARCHAR2(100);
L_COUNT NUMBER;
L_CLAIMINVOICECOUNT NUMBER;
L_TYPECODE NUMBER;
L_DETAILCODE NUMBER;
L_PROVIDERTYPE NUMBER;
L_TYPE NUMBER;L_AUTHORIZEDCOUNT NUMBER;
L_HADDPROVIDERCOUNT NUMBER;L_TREATMENTTYPE NUMBER;
P_RESULT NUMBER;L_PROVIDER_TYPE NUMBER;
L_PROVINCECOUNT NUMBER;L_BENEFITCODE NUMBER;L_BENEFITCOUNT NUMBER;
L_RULES VARCHAR2(100);L_PBMAUTHORIZATIONCOUNT NUMBER;
L_PBMCLAIMCOUNT NUMBER;L_PRIOR_AUTHORIZATION_ID   VARCHAR2(1000);
BEGIN    
FOR EC IN
(SELECT * FROM ECLAIMS WHERE   SYS_CLAIM_ID IN
(SELECT MAP_VALUE FROM IM_CLAIM_PROCESS_HEADER WHERE MAP_VALUE IS NOT NULL
AND Nvl(AUTHORIZEDSTATUS,0) = 0
AND  CLAIM_CODE NOT IN
(SELECT CLAIM_CODE FROM IM_CLAIM_PROCESS_DETAIL WHERE NVL(TYPE,0) <> 0 AND CLAIM_CODE IN
(SELECT CLAIM_CODE FROM IM_CLAIM_PROCESS_HEADER WHERE MAP_VALUE IS NOT NULL  AND  Nvl(AUTHORIZEDSTATUS,0) = 0
)))

) LOOP

     SELECT Max(CLAIM_CODE) INTO  L_CLAIMCODE FROM IM_CLAIM_PROCESs_HEADER WHERE MAP_VALUE =  EC.SYS_CLAIM_ID;
 
     FOR ECA IN (SELECT * FROM ECLAIM_DIAGNOSIS WHERE SYS_CLAIM_ID = EC.SYS_CLAIM_ID) LOOP


      SELECT COUNT(*) INTO L_COUNT FROM IM_CLAIM_PROCESS_DETAIL WHERE SYS_ACTIVITY_ID = ECA.SYS_DIAGNOSIS_ID AND CLAIM_CODE = L_CLAIMCODE;


     SELECT TYPECODE,DETAILCODE INTO L_TYPECODE,L_DETAILCODE FROM SF_CLAIMGETVERSIONPRICE_VW WHERE PROVIDERCODE = 0 AND UPPER(DETAILNAME) = UPPER(ECA.DIAGNOSIS_CODE)
     AND ROWNUM < 2;

     SELECT MIN(CONSTANTVALUE) INTO L_TYPE FROM GENCONSTANT WHERE CATEGORY = 'IMDIAGNOSISTYPE' AND
     UPPER(TRIM(CONSTANTNAME)) = UPPER(TRIM(ECA.DIAGNOSIS_TYPE)) AND UPPER(LANGUAGECODE) = 'EN-US';

     IF L_COUNT = 0 THEN

          --NGI_GETMAX_REC('IM_CLAIM_PROCESS_DETAIL','SERIALNO');

          SELECT NVL(MAX(SEQNAME),0) INTO ASEQNAME FROM NGI_TABLESERIAL_PK WHERE UPPER(TABLENAME)=UPPER('IM_CLAIM_PROCESS_DETAIL');

          EXECUTE IMMEDIATE 'SELECT '||ASEQNAME||'.NEXTVAL FROM DUAL'  INTO L_ACTIVITYSNO;

          SELECT L_ACTIVITYSNO+100000000000000000  INTO    L_ACTIVITYCODE FROM DUAL;

          SELECT MAX(ACTIVITY_DETAIL_CODE)+1 INTO L_ACTIVITYCODE FROM IM_CLAIM_PROCESS_DETAIL;
          SELECT MAX(SERIALNO)+1 INTO L_ACTIVITYSNO FROM IM_CLAIM_PROCESS_DETAIL;
          INSERT INTO IM_CLAIM_PROCESS_DETAIL (CLAIM_CODE,ACTIVITY_DETAIL_CODE,ACTIVITY_CODE,VERSIONDETAILCODE,
          TARIFFDETAILCODE,PROVIDERNETPRICE,PRICE,REQUESTAMOUNT,REQUESTQTY,QTY,COINSURANCE_AMOUNT,
          DEDUCTIBLE_AMOUNT,ACTIVITY_STATUS,CREATEDIN,CREATEDON,CREATEDBY,LASTMODIFIEDON,LASTMODIFIEDBY,
          LEGALENTITYCODE,CUSTOMERCODE,LOCATIONCODE,COMPANYCODE,CLINICIAN_CODE,MAP_VALUE,SERIALNO,
          ACTIVITYSTARTDATE,ACTIVITYENDDATE,SYS_ACTIVITY_ID,TYPE) VALUES
         (L_CLAIMCODE,L_ACTIVITYCODE,L_TYPECODE,L_DETAILCODE,L_DETAILCODE,0,0,0,0,0,0,0,
         1,1,SYSDATE,100000000000000002,SYSDATE,100000000000000002,NULL,100000000000000001,1,1,L_CLINICIAN,ECA.SYS_DIAGNOSIS_ID,
         L_ACTIVITYSNO,EC.ENCOUNTER_START,EC.ENCOUNTER_END,ECA.SYS_DIAGNOSIS_ID,L_TYPE);
         COMMIT;

     END IF;
     END LOOP;
               
  END LOOP;
END ;





DECLARE 
L_RULES VARCHAR2(500);
BEGIN
FOR HDR IN(SELECT * FROM(SELECT HDR.MAP_VALUE,Max(EC.CLAIM_NET) CLAIMNET,Sum(DTL.REQUESTAMOUNT) ACTIVITYNET FROM IM_CLAIM_PROCESS_HEADER HDR
JOIN ECLAIMS EC ON EC.SYS_CLAIM_ID = HDR.MAP_VALUE
LEFT JOIN IM_CLAIM_PROCESS_DETAIL DTL ON DTL.CLAIM_CODE = HDR.CLAIM_CODE
WHERE HDR.MAP_VALUE IS NOT NULL  AND Nvl(DTL.TYPE,0) = 0
AND Nvl(HDR.AUTHORIZEDSTATUS,0) = 0 AND RESUBMISSION_COMMENTS IS NULL GROUP BY  HDR.MAP_VALUE) WHERE CLAIMNET <> ACTIVITYNET) LOOP
L_RULES:=NGI_LOADCLAIMS_PRO.NGI_REPROCESS_MISSING_DETAIL(HDR.MAP_VALUE);
END LOOP;
END;





DECLARE 
L_RULES VARCHAR2(500);
BEGIN
FOR HDR IN(SELECT * FROM(SELECT HDR.MAP_VALUE,Max(EC.CLAIM_NET) CLAIMNET,Sum(DTL.REQUESTAMOUNT) ACTIVITYNET FROM IM_CLAIM_PROCESS_HEADER HDR
JOIN ECLAIMS EC ON EC.SYS_CLAIM_ID = HDR.MAP_VALUE
LEFT JOIN IM_CLAIM_PROCESS_DETAIL DTL ON DTL.CLAIM_CODE = HDR.CLAIM_CODE
WHERE HDR.MAP_VALUE IS NOT NULL  AND Nvl(DTL.TYPE,0) = 0     AND To_Date(TRANSACTION_DATE,'DD/MM/RRRR') > To_Date('01/01/2017','DD/MM/RRRR')
AND Nvl(HDR.AUTHORIZEDSTATUS,0) = 0 AND RESUBMISSION_COMMENTS IS NULL GROUP BY  HDR.MAP_VALUE) WHERE CLAIMNET <> ACTIVITYNET) LOOP
L_RULES:=NGI_LOADCLAIMS_PRO.NGI_REPROCESS_MISSING_DETAIL(HDR.MAP_VALUE);
END LOOP;
END;



DECLARE 
L_RULES VARCHAR2(500);
BEGIN
FOR HDR IN(SELECT * FROM(SELECT HDR.MAP_VALUE,ECA.SYS_ACTIVITY_ID,MAX(Nvl(DTL.REQUESTAMOUNT,0)) ACTIVITYNET,
 MAX(ACTIVITY_NET) ANET FROM IM_CLAIM_PROCESS_HEADER HDR
JOIN ECLAIMS EC ON EC.SYS_CLAIM_ID = HDR.MAP_VALUE
JOIN ECLAIM_ACTIVITIES ECA ON ECA.SYS_CLAIM_ID = EC.SYS_CLAIM_ID
LEFT JOIN IM_CLAIM_PROCESS_DETAIL DTL ON DTL.CLAIM_CODE = HDR.CLAIM_CODE
WHERE HDR.MAP_VALUE IS NOT NULL  AND Nvl(DTL.TYPE,0) = 0   AND DTL.SYS_ACTIVITY_ID = ECA.SYS_ACTIVITY_ID AND To_Date(TRANSACTION_DATE,'DD/MM/RRRR') > To_Date('01/01/2017','DD/MM/RRRR')
AND Nvl(HDR.AUTHORIZEDSTATUS,0) = 0 AND RESUBMISSION_COMMENTS IS NULL GROUP BY   HDR.MAP_VALUE,ECA.SYS_ACTIVITY_ID) WHERE ANET <> ACTIVITYNET
) LOOP
UPDATE IM_CLAIM_PROCESS_DETAIL SET REQUESTAMOUNT = HDR.ANET WHERE SYS_ACTIVITY_ID = HDR.SYS_ACTIVITY_ID
AND Nvl(TYPE,0) = 0 AND CLAIM_CODE IN(SELECT CLAIM_CODE FROM IM_CLAIM_PROCESS_HEADER WHERE MAP_VALUE = HDR.MAP_VALUE);
COMMIT;
END LOOP;
END;

                              





                                                               