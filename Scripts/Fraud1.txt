

DECLARE L_ACTVIITY_PAYMENT_AMOUNT NUMBER;L_APPROVEDCOUNT NUMBER;
BEGIN
FOR HDR IN(SELECT * FROM ECLAIMS_F WHERE SYS_CLAIM_ID IN
(SELECT DISTINCT SYS_CLAIM_ID FROM ECLAIM_ACTIVITIES_F WHERE PRIOR_AUTHORIZATION_ID IN
(SELECT ID_PAYER FROM EPRIORREQUEST  WHERE CLAIMHEADERPK IS NOT NULL))) LOOP

FOR DTL IN(SELECT * FROM ECLAIM_ACTIVITIES_F WHERE SYS_CLAIM_ID = HDR.SYS_CLAIM_ID) LOOP

SELECT COUNT(*) INTO L_APPROVEDCOUNT FROM EPRIORREQUEST_ACTIVITIES WHERE SYS_CLAIM_ID IN
(SELECT SYS_CLAIM_ID FROM  EPRIORREQUEST WHERE   ID_PAYER = DTL.PRIOR_AUTHORIZATION_ID) AND
ACTIVITY_CODE = DTL.ACTIVITY_CODE AND  Nvl(ACTIVITY_PAYMENT_AMOUNT,0) <> 0;

IF L_APPROVEDCOUNT = 0 THEN
UPDATE ECLAIM_ACTIVITIES_F SET CCLAIM = 1,ACTIVITY_PAYMENT_AMOUNT = 0 WHERE SYS_ACTIVITY_ID= DTL.SYS_ACTIVITY_ID AND Nvl(CCLAIM,0) = 0;
COMMIT;
UPDATE ECLAIMS_F SET ISDUPLICATE = 1 WHERE  SYS_CLAIM_ID = DTL.SYS_CLAIM_ID;
COMMIT; 
ELSE
SELECT Sum(ACTIVITY_PAYMENT_AMOUNT) INTO L_ACTVIITY_PAYMENT_AMOUNT FROM EPRIORREQUEST_ACTIVITIES WHERE SYS_CLAIM_ID IN
(SELECT SYS_CLAIM_ID FROM  EPRIORREQUEST WHERE   ID_PAYER = DTL.PRIOR_AUTHORIZATION_ID) AND
ACTIVITY_CODE = DTL.ACTIVITY_CODE AND  Nvl(ACTIVITY_PAYMENT_AMOUNT,0) <> 0;             
UPDATE ECLAIM_ACTIVITIES_F SET CCLAIM = 0,ACTIVITY_PAYMENT_AMOUNT = L_ACTVIITY_PAYMENT_AMOUNT WHERE SYS_ACTIVITY_ID= DTL.SYS_ACTIVITY_ID AND Nvl(CCLAIM,0) = 0;
COMMIT;                                               
END IF; 

END LOOP;

END LOOP;
END;

